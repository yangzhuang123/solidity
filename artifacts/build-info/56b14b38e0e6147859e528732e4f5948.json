{
	"id": "56b14b38e0e6147859e528732e4f5948",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"task2/BeggingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n创建一个名为 BeggingContract 的合约。\n合约应包含以下功能：\n一个 mapping 来记录每个捐赠者的捐赠金额。\n一个 donate 函数，允许用户向合约发送以太币，并记录捐赠信息。\n一个 withdraw 函数，允许合约所有者提取所有资金。\n一个 getDonation 函数，允许查询某个地址的捐赠金额。\n使用 payable 修饰符和 address.transfer 实现支付和提款。\n\n捐赠事件：添加 Donation 事件，记录每次捐赠的地址和金额。\n捐赠排行榜：实现一个功能，显示捐赠金额最多的前 3 个地址。\n时间限制：添加一个时间限制，只有在特定时间段内才能捐赠。\n**/\n\ncontract BeggingContract is Ownable {\n    //来记录每个捐赠者的捐赠金额\n    mapping(address donor => uint amount) private _donations;\n    // 捐赠事件：添加 Donation 事件，记录每次捐赠的地址和金额。\n    event Donation(address indexed donor, uint256 amount, uint256 timestamp);\n    // 提取事件\n    event WithDraw(address indexed owner, uint256 amount, uint256 timestamp);\n    // 捐款截止时间\n    uint256 public donationEndTime;\n    // 捐款最多的三个地址\n    address[3] private topDonors;\n\n    // 构造函数\n    constructor() Ownable(msg.sender) {\n         donationEndTime = block.timestamp + 3 days;\n    }\n\n    // 捐款\n    function donate() public payable {\n        uint256 donation = msg.value;\n        require(donation > 0, \"Donation amount must be greater than 0\");\n        // 时间限制：添加一个时间限制，只有在特定时间段内才能捐赠。\n        require(block.timestamp < donationEndTime, \"Donation period has ended\");\n        _donations[msg.sender] += donation;\n        updateTopDonnors(msg.sender);\n        emit Donation(msg.sender, msg.value, block.timestamp);\n    }\n\n    function updateTopDonnors(address donor) private{\n        uint256 amount = _donations[donor];\n        bool isTopDonor = false;\n        // 初始化前三名捐款者\n         for (uint256 i = 0; i < 3; i++) {\n            if (topDonors[i] == donor) {\n                isTopDonor = true;\n                break;\n            }\n            if (topDonors[i] == address(0)) {\n                topDonors[i] = donor;\n                return;\n            }\n        }\n\n        // 无需删除其他捐款者\n        if (isTopDonor) {\n            return;\n        }\n\n        // 更新前三名捐款者\n        for (uint256 i = 0; i < 3; i++) {\n            if (amount > _donations[topDonors[i]]) {\n                for (uint256 j = 2; j > i; j--) {\n                    topDonors[j] = topDonors[j - 1];\n                }\n                topDonors[i] = donor;\n                break;\n            }\n        }\n    }\n\n    // 允许合约所有者提取所有资金\n    function withdraw() external payable onlyOwner {\n        uint balance = address(this).balance;\n        require(balance > 0, \"no balance!\");\n\n        // 提取资金：使用transfer向所有者转账\n        payable(owner()).transfer(balance);\n        emit Donation(owner(), balance, block.timestamp);\n    }\n\n    //允许查询某个地址的捐赠金额\n    function getDonation(address _addr) public view returns (uint) {\n        return _donations[_addr];\n    }\n\n    // 获取捐款最多的三个地址\n    function getTopDonors() public view returns (address[3] memory) {\n        return topDonors;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"task2/BeggingContract.sol": {
				"BeggingContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "donor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Donation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WithDraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donationEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "getDonation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTopDonors",
							"outputs": [
								{
									"internalType": "address[3]",
									"name": "",
									"type": "address[3]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task2/BeggingContract.sol\":820:3533  contract BeggingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"task2/BeggingContract.sol\":1385:1479  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"task2/BeggingContract.sol\":1407:1417  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"task2/BeggingContract.sol\":1466:1472  3 days */\n  0x03f480\n    /* \"task2/BeggingContract.sol\":1448:1463  block.timestamp */\n  timestamp\n    /* \"task2/BeggingContract.sol\":1448:1472  block.timestamp + 3 days */\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"task2/BeggingContract.sol\":1430:1445  donationEndTime */\n  0x02\n    /* \"task2/BeggingContract.sol\":1430:1472  donationEndTime = block.timestamp + 3 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task2/BeggingContract.sol\":820:3533  contract BeggingContract is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_23\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_25\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_27\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:670   */\ntag_18:\n    /* \"#utility.yul\":630:637   */\n  0x00\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":648:664   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:670   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":676:856   */\ntag_19:\n    /* \"#utility.yul\":724:801   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":721:722   */\n  0x00\n    /* \"#utility.yul\":714:802   */\n  mstore\n    /* \"#utility.yul\":821:825   */\n  0x11\n    /* \"#utility.yul\":818:819   */\n  0x04\n    /* \"#utility.yul\":811:826   */\n  mstore\n    /* \"#utility.yul\":845:849   */\n  0x24\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":835:850   */\n  revert\n    /* \"#utility.yul\":862:1053   */\ntag_12:\n    /* \"#utility.yul\":902:905   */\n  0x00\n    /* \"#utility.yul\":921:941   */\n  tag_31\n    /* \"#utility.yul\":939:940   */\n  dup3\n    /* \"#utility.yul\":921:941   */\n  tag_18\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":916:941   */\n  swap2\n  pop\n    /* \"#utility.yul\":955:975   */\n  tag_32\n    /* \"#utility.yul\":973:974   */\n  dup4\n    /* \"#utility.yul\":955:975   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":950:975   */\n  swap3\n  pop\n    /* \"#utility.yul\":998:999   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup3\n    /* \"#utility.yul\":991:1000   */\n  add\n    /* \"#utility.yul\":984:1000   */\n  swap1\n  pop\n    /* \"#utility.yul\":1019:1022   */\n  dup1\n    /* \"#utility.yul\":1016:1017   */\n  dup3\n    /* \"#utility.yul\":1013:1023   */\n  gt\n    /* \"#utility.yul\":1010:1046   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1026:1044   */\n  tag_34\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1010:1046   */\ntag_33:\n    /* \"#utility.yul\":862:1053   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"task2/BeggingContract.sol\":820:3533  contract BeggingContract is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"task2/BeggingContract.sol\":820:3533  contract BeggingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd6387ed8\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xd6387ed8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf12a4a53\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x410a1d32\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"task2/BeggingContract.sol\":2924:3231  function withdraw() external payable onlyOwner {... */\n    tag_2:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"task2/BeggingContract.sol\":3283:3387  function getDonation(address _addr) public view returns (uint) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_13:\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/BeggingContract.sol\":3434:3531  function getTopDonors() public view returns (address[3] memory) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/BeggingContract.sol\":1499:1972  function donate() public payable {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"task2/BeggingContract.sol\":1259:1289  uint256 public donationEndTime */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"task2/BeggingContract.sol\":2924:3231  function withdraw() external payable onlyOwner {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_44:\n        /* \"task2/BeggingContract.sol\":2981:2993  uint balance */\n      0x00\n        /* \"task2/BeggingContract.sol\":2996:3017  address(this).balance */\n      selfbalance\n        /* \"task2/BeggingContract.sol\":2981:3017  uint balance = address(this).balance */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":3045:3046  0 */\n      0x00\n        /* \"task2/BeggingContract.sol\":3035:3042  balance */\n      dup2\n        /* \"task2/BeggingContract.sol\":3035:3046  balance > 0 */\n      gt\n        /* \"task2/BeggingContract.sol\":3027:3062  require(balance > 0, \"no balance!\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"task2/BeggingContract.sol\":3140:3147  owner() */\n      tag_50\n        /* \"task2/BeggingContract.sol\":3140:3145  owner */\n      tag_25\n        /* \"task2/BeggingContract.sol\":3140:3147  owner() */\n      jump\t// in\n    tag_50:\n        /* \"task2/BeggingContract.sol\":3132:3157  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":3132:3166  payable(owner()).transfer(balance) */\n      0x08fc\n        /* \"task2/BeggingContract.sol\":3158:3165  balance */\n      dup3\n        /* \"task2/BeggingContract.sol\":3132:3166  payable(owner()).transfer(balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n        /* \"task2/BeggingContract.sol\":3190:3197  owner() */\n      tag_53\n        /* \"task2/BeggingContract.sol\":3190:3195  owner */\n      tag_25\n        /* \"task2/BeggingContract.sol\":3190:3197  owner() */\n      jump\t// in\n    tag_53:\n        /* \"task2/BeggingContract.sol\":3181:3224  Donation(owner(), balance, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106aac375bbcf013d1e52338bbf9e740009a1a3a6869f8daa1b72aa1620f5fec\n        /* \"task2/BeggingContract.sol\":3199:3206  balance */\n      dup3\n        /* \"task2/BeggingContract.sol\":3208:3223  block.timestamp */\n      timestamp\n        /* \"task2/BeggingContract.sol\":3181:3224  Donation(owner(), balance, block.timestamp) */\n      mload(0x40)\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"task2/BeggingContract.sol\":2971:3231  {... */\n      pop\n        /* \"task2/BeggingContract.sol\":2924:3231  function withdraw() external payable onlyOwner {... */\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":3283:3387  function getDonation(address _addr) public view returns (uint) {... */\n    tag_17:\n        /* \"task2/BeggingContract.sol\":3340:3344  uint */\n      0x00\n        /* \"task2/BeggingContract.sol\":3363:3373  _donations */\n      0x01\n        /* \"task2/BeggingContract.sol\":3363:3380  _donations[_addr] */\n      0x00\n        /* \"task2/BeggingContract.sol\":3374:3379  _addr */\n      dup4\n        /* \"task2/BeggingContract.sol\":3363:3380  _donations[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/BeggingContract.sol\":3356:3380  return _donations[_addr] */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":3283:3387  function getDonation(address _addr) public view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":3434:3531  function getTopDonors() public view returns (address[3] memory) {... */\n    tag_30:\n        /* \"task2/BeggingContract.sol\":3479:3496  address[3] memory */\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"task2/BeggingContract.sol\":3515:3524  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":3508:3524  return topDonors */\n      dup1\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      0x03\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n    tag_67:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":3434:3531  function getTopDonors() public view returns (address[3] memory) {... */\n      swap1\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":1499:1972  function donate() public payable {... */\n    tag_34:\n        /* \"task2/BeggingContract.sol\":1542:1558  uint256 donation */\n      0x00\n        /* \"task2/BeggingContract.sol\":1561:1570  msg.value */\n      callvalue\n        /* \"task2/BeggingContract.sol\":1542:1570  uint256 donation = msg.value */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":1599:1600  0 */\n      0x00\n        /* \"task2/BeggingContract.sol\":1588:1596  donation */\n      dup2\n        /* \"task2/BeggingContract.sol\":1588:1600  donation > 0 */\n      gt\n        /* \"task2/BeggingContract.sol\":1580:1643  require(donation > 0, \"Donation amount must be greater than 0\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"task2/BeggingContract.sol\":1775:1790  donationEndTime */\n      sload(0x02)\n        /* \"task2/BeggingContract.sol\":1757:1772  block.timestamp */\n      timestamp\n        /* \"task2/BeggingContract.sol\":1757:1790  block.timestamp < donationEndTime */\n      lt\n        /* \"task2/BeggingContract.sol\":1749:1820  require(block.timestamp < donationEndTime, \"Donation period has ended\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"task2/BeggingContract.sol\":1856:1864  donation */\n      dup1\n        /* \"task2/BeggingContract.sol\":1830:1840  _donations */\n      0x01\n        /* \"task2/BeggingContract.sol\":1830:1852  _donations[msg.sender] */\n      0x00\n        /* \"task2/BeggingContract.sol\":1841:1851  msg.sender */\n      caller\n        /* \"task2/BeggingContract.sol\":1830:1852  _donations[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/BeggingContract.sol\":1830:1864  _donations[msg.sender] += donation */\n      dup3\n      dup3\n      sload\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/BeggingContract.sol\":1874:1902  updateTopDonnors(msg.sender) */\n      tag_77\n        /* \"task2/BeggingContract.sol\":1891:1901  msg.sender */\n      caller\n        /* \"task2/BeggingContract.sol\":1874:1890  updateTopDonnors */\n      tag_78\n        /* \"task2/BeggingContract.sol\":1874:1902  updateTopDonnors(msg.sender) */\n      jump\t// in\n    tag_77:\n        /* \"task2/BeggingContract.sol\":1926:1936  msg.sender */\n      caller\n        /* \"task2/BeggingContract.sol\":1917:1965  Donation(msg.sender, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106aac375bbcf013d1e52338bbf9e740009a1a3a6869f8daa1b72aa1620f5fec\n        /* \"task2/BeggingContract.sol\":1938:1947  msg.value */\n      callvalue\n        /* \"task2/BeggingContract.sol\":1949:1964  block.timestamp */\n      timestamp\n        /* \"task2/BeggingContract.sol\":1917:1965  Donation(msg.sender, msg.value, block.timestamp) */\n      mload(0x40)\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"task2/BeggingContract.sol\":1532:1972  {... */\n      pop\n        /* \"task2/BeggingContract.sol\":1499:1972  function donate() public payable {... */\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":1259:1289  uint256 public donationEndTime */\n    tag_37:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":1978:2871  function updateTopDonnors(address donor) private{... */\n    tag_78:\n        /* \"task2/BeggingContract.sol\":2036:2050  uint256 amount */\n      0x00\n        /* \"task2/BeggingContract.sol\":2053:2063  _donations */\n      0x01\n        /* \"task2/BeggingContract.sol\":2053:2070  _donations[donor] */\n      0x00\n        /* \"task2/BeggingContract.sol\":2064:2069  donor */\n      dup4\n        /* \"task2/BeggingContract.sol\":2053:2070  _donations[donor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/BeggingContract.sol\":2036:2070  uint256 amount = _donations[donor] */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":2080:2095  bool isTopDonor */\n      0x00\n        /* \"task2/BeggingContract.sol\":2098:2103  false */\n      0x00\n        /* \"task2/BeggingContract.sol\":2080:2103  bool isTopDonor = false */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":2158:2167  uint256 i */\n      0x00\n        /* \"task2/BeggingContract.sol\":2170:2171  0 */\n      0x00\n        /* \"task2/BeggingContract.sol\":2158:2171  uint256 i = 0 */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":2153:2431  for (uint256 i = 0; i < 3; i++) {... */\n    tag_95:\n        /* \"task2/BeggingContract.sol\":2177:2178  3 */\n      0x03\n        /* \"task2/BeggingContract.sol\":2173:2174  i */\n      dup2\n        /* \"task2/BeggingContract.sol\":2173:2178  i < 3 */\n      lt\n        /* \"task2/BeggingContract.sol\":2153:2431  for (uint256 i = 0; i < 3; i++) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"task2/BeggingContract.sol\":2219:2224  donor */\n      dup4\n        /* \"task2/BeggingContract.sol\":2203:2224  topDonors[i] == donor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":2203:2212  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":2213:2214  i */\n      dup3\n        /* \"task2/BeggingContract.sol\":2203:2215  topDonors[i] */\n      0x03\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n    tag_98:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":2203:2224  topDonors[i] == donor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/BeggingContract.sol\":2199:2299  if (topDonors[i] == donor) {... */\n      tag_102\n      jumpi\n        /* \"task2/BeggingContract.sol\":2257:2261  true */\n      0x01\n        /* \"task2/BeggingContract.sol\":2244:2261  isTopDonor = true */\n      swap2\n      pop\n        /* \"task2/BeggingContract.sol\":2279:2284  break */\n      jump(tag_96)\n        /* \"task2/BeggingContract.sol\":2199:2299  if (topDonors[i] == donor) {... */\n    tag_102:\n        /* \"task2/BeggingContract.sol\":2340:2341  0 */\n      0x00\n        /* \"task2/BeggingContract.sol\":2316:2342  topDonors[i] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":2316:2325  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":2326:2327  i */\n      dup3\n        /* \"task2/BeggingContract.sol\":2316:2328  topDonors[i] */\n      0x03\n      dup2\n      lt\n      tag_103\n      jumpi\n      tag_104\n      tag_100\n      jump\t// in\n    tag_104:\n    tag_103:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":2316:2342  topDonors[i] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/BeggingContract.sol\":2312:2421  if (topDonors[i] == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"task2/BeggingContract.sol\":2377:2382  donor */\n      dup4\n        /* \"task2/BeggingContract.sol\":2362:2371  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":2372:2373  i */\n      dup3\n        /* \"task2/BeggingContract.sol\":2362:2374  topDonors[i] */\n      0x03\n      dup2\n      lt\n      tag_107\n      jumpi\n      tag_108\n      tag_100\n      jump\t// in\n    tag_108:\n    tag_107:\n      add\n      0x00\n        /* \"task2/BeggingContract.sol\":2362:2382  topDonors[i] = donor */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"task2/BeggingContract.sol\":2400:2407  return; */\n      pop\n      pop\n      pop\n      jump(tag_94)\n        /* \"task2/BeggingContract.sol\":2312:2421  if (topDonors[i] == address(0)) {... */\n    tag_106:\n        /* \"task2/BeggingContract.sol\":2180:2183  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"task2/BeggingContract.sol\":2153:2431  for (uint256 i = 0; i < 3; i++) {... */\n      jump(tag_95)\n    tag_96:\n      pop\n        /* \"task2/BeggingContract.sol\":2484:2494  isTopDonor */\n      dup1\n        /* \"task2/BeggingContract.sol\":2480:2527  if (isTopDonor) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"task2/BeggingContract.sol\":2510:2517  return; */\n      pop\n      pop\n      jump(tag_94)\n        /* \"task2/BeggingContract.sol\":2480:2527  if (isTopDonor) {... */\n    tag_110:\n        /* \"task2/BeggingContract.sol\":2578:2587  uint256 i */\n      0x00\n        /* \"task2/BeggingContract.sol\":2590:2591  0 */\n      0x00\n        /* \"task2/BeggingContract.sol\":2578:2591  uint256 i = 0 */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":2573:2865  for (uint256 i = 0; i < 3; i++) {... */\n    tag_111:\n        /* \"task2/BeggingContract.sol\":2597:2598  3 */\n      0x03\n        /* \"task2/BeggingContract.sol\":2593:2594  i */\n      dup2\n        /* \"task2/BeggingContract.sol\":2593:2598  i < 3 */\n      lt\n        /* \"task2/BeggingContract.sol\":2573:2865  for (uint256 i = 0; i < 3; i++) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"task2/BeggingContract.sol\":2632:2642  _donations */\n      0x01\n        /* \"task2/BeggingContract.sol\":2632:2656  _donations[topDonors[i]] */\n      0x00\n        /* \"task2/BeggingContract.sol\":2643:2652  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":2653:2654  i */\n      dup4\n        /* \"task2/BeggingContract.sol\":2643:2655  topDonors[i] */\n      0x03\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_115\n      tag_100\n      jump\t// in\n    tag_115:\n    tag_114:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":2632:2656  _donations[topDonors[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/BeggingContract.sol\":2623:2629  amount */\n      dup4\n        /* \"task2/BeggingContract.sol\":2623:2656  amount > _donations[topDonors[i]] */\n      gt\n        /* \"task2/BeggingContract.sol\":2619:2855  if (amount > _donations[topDonors[i]]) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"task2/BeggingContract.sol\":2681:2690  uint256 j */\n      0x00\n        /* \"task2/BeggingContract.sol\":2693:2694  2 */\n      0x02\n        /* \"task2/BeggingContract.sol\":2681:2694  uint256 j = 2 */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":2676:2780  for (uint256 j = 2; j > i; j--) {... */\n    tag_118:\n        /* \"task2/BeggingContract.sol\":2700:2701  i */\n      dup2\n        /* \"task2/BeggingContract.sol\":2696:2697  j */\n      dup2\n        /* \"task2/BeggingContract.sol\":2696:2701  j > i */\n      gt\n        /* \"task2/BeggingContract.sol\":2676:2780  for (uint256 j = 2; j > i; j--) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"task2/BeggingContract.sol\":2745:2754  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":2759:2760  1 */\n      0x01\n        /* \"task2/BeggingContract.sol\":2755:2756  j */\n      dup3\n        /* \"task2/BeggingContract.sol\":2755:2760  j - 1 */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"task2/BeggingContract.sol\":2745:2761  topDonors[j - 1] */\n      0x03\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_100\n      jump\t// in\n    tag_124:\n    tag_123:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":2730:2739  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":2740:2741  j */\n      dup3\n        /* \"task2/BeggingContract.sol\":2730:2742  topDonors[j] */\n      0x03\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_127\n      tag_100\n      jump\t// in\n    tag_127:\n    tag_126:\n      add\n      0x00\n        /* \"task2/BeggingContract.sol\":2730:2761  topDonors[j] = topDonors[j - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"task2/BeggingContract.sol\":2703:2706  j-- */\n      dup1\n      dup1\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      swap2\n      pop\n      pop\n        /* \"task2/BeggingContract.sol\":2676:2780  for (uint256 j = 2; j > i; j--) {... */\n      jump(tag_118)\n    tag_119:\n      pop\n        /* \"task2/BeggingContract.sol\":2812:2817  donor */\n      dup4\n        /* \"task2/BeggingContract.sol\":2797:2806  topDonors */\n      0x03\n        /* \"task2/BeggingContract.sol\":2807:2808  i */\n      dup3\n        /* \"task2/BeggingContract.sol\":2797:2809  topDonors[i] */\n      0x03\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_100\n      jump\t// in\n    tag_132:\n    tag_131:\n      add\n      0x00\n        /* \"task2/BeggingContract.sol\":2797:2817  topDonors[i] = donor */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"task2/BeggingContract.sol\":2835:2840  break */\n      jump(tag_112)\n        /* \"task2/BeggingContract.sol\":2619:2855  if (amount > _donations[topDonors[i]]) {... */\n    tag_117:\n        /* \"task2/BeggingContract.sol\":2600:2603  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"task2/BeggingContract.sol\":2573:2865  for (uint256 i = 0; i < 3; i++) {... */\n      jump(tag_111)\n    tag_112:\n      pop\n        /* \"task2/BeggingContract.sol\":2026:2871  {... */\n      pop\n      pop\n        /* \"task2/BeggingContract.sol\":1978:2871  function updateTopDonnors(address donor) private{... */\n    tag_94:\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_64:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_136:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_138:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_139:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_166\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_138\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_140:\n        /* \"#utility.yul\":641:665   */\n      tag_168\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_139\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_169:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_141:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_171\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_140\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_174\n      tag_136\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":917:1036   */\n    tag_173:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_175\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_141\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_142:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_143:\n        /* \"#utility.yul\":1346:1370   */\n      tag_178\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_142\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_19:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_180\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_143\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_144:\n        /* \"#utility.yul\":1698:1722   */\n      tag_182\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_139\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_27:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_184\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_144\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2067   */\n    tag_145:\n        /* \"#utility.yul\":2028:2034   */\n      0x00\n        /* \"#utility.yul\":2056:2060   */\n      0x03\n        /* \"#utility.yul\":2046:2060   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2216   */\n    tag_146:\n        /* \"#utility.yul\":2170:2181   */\n      0x00\n        /* \"#utility.yul\":2207:2210   */\n      dup2\n        /* \"#utility.yul\":2192:2210   */\n      swap1\n      pop\n        /* \"#utility.yul\":2073:2216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2222:2320   */\n    tag_147:\n        /* \"#utility.yul\":2287:2291   */\n      0x00\n        /* \"#utility.yul\":2310:2313   */\n      dup2\n        /* \"#utility.yul\":2302:2313   */\n      swap1\n      pop\n        /* \"#utility.yul\":2222:2320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2326:2434   */\n    tag_148:\n        /* \"#utility.yul\":2403:2427   */\n      tag_189\n        /* \"#utility.yul\":2421:2426   */\n      dup2\n        /* \"#utility.yul\":2403:2427   */\n      tag_139\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2398:2401   */\n      dup3\n        /* \"#utility.yul\":2391:2428   */\n      mstore\n        /* \"#utility.yul\":2326:2434   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2440:2619   */\n    tag_149:\n        /* \"#utility.yul\":2509:2519   */\n      0x00\n        /* \"#utility.yul\":2530:2576   */\n      tag_191\n        /* \"#utility.yul\":2572:2575   */\n      dup4\n        /* \"#utility.yul\":2564:2570   */\n      dup4\n        /* \"#utility.yul\":2530:2576   */\n      tag_148\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2608:2612   */\n      0x20\n        /* \"#utility.yul\":2603:2606   */\n      dup4\n        /* \"#utility.yul\":2599:2613   */\n      add\n        /* \"#utility.yul\":2585:2613   */\n      swap1\n      pop\n        /* \"#utility.yul\":2440:2619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2625:2736   */\n    tag_150:\n        /* \"#utility.yul\":2693:2697   */\n      0x00\n        /* \"#utility.yul\":2725:2729   */\n      0x20\n        /* \"#utility.yul\":2720:2723   */\n      dup3\n        /* \"#utility.yul\":2716:2730   */\n      add\n        /* \"#utility.yul\":2708:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2625:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2774:3468   */\n    tag_151:\n        /* \"#utility.yul\":2910:2962   */\n      tag_194\n        /* \"#utility.yul\":2956:2961   */\n      dup2\n        /* \"#utility.yul\":2910:2962   */\n      tag_145\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2978:3062   */\n      tag_195\n        /* \"#utility.yul\":3055:3061   */\n      dup2\n        /* \"#utility.yul\":3050:3053   */\n      dup5\n        /* \"#utility.yul\":2978:3062   */\n      tag_146\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2971:3062   */\n      swap3\n      pop\n        /* \"#utility.yul\":3086:3140   */\n      tag_196\n        /* \"#utility.yul\":3134:3139   */\n      dup3\n        /* \"#utility.yul\":3086:3140   */\n      tag_147\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3163:3170   */\n      dup1\n        /* \"#utility.yul\":3194:3195   */\n      0x00\n        /* \"#utility.yul\":3179:3461   */\n    tag_197:\n        /* \"#utility.yul\":3204:3210   */\n      dup4\n        /* \"#utility.yul\":3201:3202   */\n      dup2\n        /* \"#utility.yul\":3198:3211   */\n      lt\n        /* \"#utility.yul\":3179:3461   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3280:3286   */\n      dup2\n        /* \"#utility.yul\":3274:3287   */\n      mload\n        /* \"#utility.yul\":3307:3370   */\n      tag_200\n        /* \"#utility.yul\":3366:3369   */\n      dup8\n        /* \"#utility.yul\":3351:3364   */\n      dup3\n        /* \"#utility.yul\":3307:3370   */\n      tag_149\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3300:3370   */\n      swap7\n      pop\n        /* \"#utility.yul\":3393:3451   */\n      tag_201\n        /* \"#utility.yul\":3444:3450   */\n      dup4\n        /* \"#utility.yul\":3393:3451   */\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3383:3451   */\n      swap3\n      pop\n        /* \"#utility.yul\":3239:3461   */\n      pop\n        /* \"#utility.yul\":3226:3227   */\n      0x01\n        /* \"#utility.yul\":3223:3224   */\n      dup2\n        /* \"#utility.yul\":3219:3228   */\n      add\n        /* \"#utility.yul\":3214:3228   */\n      swap1\n      pop\n        /* \"#utility.yul\":3179:3461   */\n      jump(tag_197)\n    tag_199:\n        /* \"#utility.yul\":3183:3197   */\n      pop\n        /* \"#utility.yul\":2886:3468   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2774:3468   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3474:3788   */\n    tag_32:\n        /* \"#utility.yul\":3613:3617   */\n      0x00\n        /* \"#utility.yul\":3651:3653   */\n      0x60\n        /* \"#utility.yul\":3640:3649   */\n      dup3\n        /* \"#utility.yul\":3636:3654   */\n      add\n        /* \"#utility.yul\":3628:3654   */\n      swap1\n      pop\n        /* \"#utility.yul\":3664:3781   */\n      tag_203\n        /* \"#utility.yul\":3778:3779   */\n      0x00\n        /* \"#utility.yul\":3767:3776   */\n      dup4\n        /* \"#utility.yul\":3763:3780   */\n      add\n        /* \"#utility.yul\":3754:3760   */\n      dup5\n        /* \"#utility.yul\":3664:3781   */\n      tag_151\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3474:3788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3794:3963   */\n    tag_152:\n        /* \"#utility.yul\":3878:3889   */\n      0x00\n        /* \"#utility.yul\":3912:3918   */\n      dup3\n        /* \"#utility.yul\":3907:3910   */\n      dup3\n        /* \"#utility.yul\":3900:3919   */\n      mstore\n        /* \"#utility.yul\":3952:3956   */\n      0x20\n        /* \"#utility.yul\":3947:3950   */\n      dup3\n        /* \"#utility.yul\":3943:3957   */\n      add\n        /* \"#utility.yul\":3928:3957   */\n      swap1\n      pop\n        /* \"#utility.yul\":3794:3963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3969:4130   */\n    tag_153:\n        /* \"#utility.yul\":4109:4122   */\n      0x6e6f2062616c616e636521000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4105:4106   */\n      0x00\n        /* \"#utility.yul\":4097:4103   */\n      dup3\n        /* \"#utility.yul\":4093:4107   */\n      add\n        /* \"#utility.yul\":4086:4123   */\n      mstore\n        /* \"#utility.yul\":3969:4130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4502   */\n    tag_154:\n        /* \"#utility.yul\":4278:4281   */\n      0x00\n        /* \"#utility.yul\":4299:4366   */\n      tag_207\n        /* \"#utility.yul\":4363:4365   */\n      0x0b\n        /* \"#utility.yul\":4358:4361   */\n      dup4\n        /* \"#utility.yul\":4299:4366   */\n      tag_152\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4292:4366   */\n      swap2\n      pop\n        /* \"#utility.yul\":4375:4468   */\n      tag_208\n        /* \"#utility.yul\":4464:4467   */\n      dup3\n        /* \"#utility.yul\":4375:4468   */\n      tag_153\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4493:4495   */\n      0x20\n        /* \"#utility.yul\":4488:4491   */\n      dup3\n        /* \"#utility.yul\":4484:4496   */\n      add\n        /* \"#utility.yul\":4477:4496   */\n      swap1\n      pop\n        /* \"#utility.yul\":4136:4502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4508:4927   */\n    tag_49:\n        /* \"#utility.yul\":4674:4678   */\n      0x00\n        /* \"#utility.yul\":4712:4714   */\n      0x20\n        /* \"#utility.yul\":4701:4710   */\n      dup3\n        /* \"#utility.yul\":4697:4715   */\n      add\n        /* \"#utility.yul\":4689:4715   */\n      swap1\n      pop\n        /* \"#utility.yul\":4761:4770   */\n      dup2\n        /* \"#utility.yul\":4755:4759   */\n      dup2\n        /* \"#utility.yul\":4751:4771   */\n      sub\n        /* \"#utility.yul\":4747:4748   */\n      0x00\n        /* \"#utility.yul\":4736:4745   */\n      dup4\n        /* \"#utility.yul\":4732:4749   */\n      add\n        /* \"#utility.yul\":4725:4772   */\n      mstore\n        /* \"#utility.yul\":4789:4920   */\n      tag_210\n        /* \"#utility.yul\":4915:4919   */\n      dup2\n        /* \"#utility.yul\":4789:4920   */\n      tag_154\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4781:4920   */\n      swap1\n      pop\n        /* \"#utility.yul\":4508:4927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4933:5265   */\n    tag_55:\n        /* \"#utility.yul\":5054:5058   */\n      0x00\n        /* \"#utility.yul\":5092:5094   */\n      0x40\n        /* \"#utility.yul\":5081:5090   */\n      dup3\n        /* \"#utility.yul\":5077:5095   */\n      add\n        /* \"#utility.yul\":5069:5095   */\n      swap1\n      pop\n        /* \"#utility.yul\":5105:5176   */\n      tag_212\n        /* \"#utility.yul\":5173:5174   */\n      0x00\n        /* \"#utility.yul\":5162:5171   */\n      dup4\n        /* \"#utility.yul\":5158:5175   */\n      add\n        /* \"#utility.yul\":5149:5155   */\n      dup6\n        /* \"#utility.yul\":5105:5176   */\n      tag_143\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5186:5258   */\n      tag_213\n        /* \"#utility.yul\":5254:5256   */\n      0x20\n        /* \"#utility.yul\":5243:5252   */\n      dup4\n        /* \"#utility.yul\":5239:5257   */\n      add\n        /* \"#utility.yul\":5230:5236   */\n      dup5\n        /* \"#utility.yul\":5186:5258   */\n      tag_143\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4933:5265   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5271:5496   */\n    tag_155:\n        /* \"#utility.yul\":5411:5445   */\n      0x446f6e6174696f6e20616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":5407:5408   */\n      0x00\n        /* \"#utility.yul\":5399:5405   */\n      dup3\n        /* \"#utility.yul\":5395:5409   */\n      add\n        /* \"#utility.yul\":5388:5446   */\n      mstore\n        /* \"#utility.yul\":5480:5488   */\n      0x7468616e20300000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5475:5477   */\n      0x20\n        /* \"#utility.yul\":5467:5473   */\n      dup3\n        /* \"#utility.yul\":5463:5478   */\n      add\n        /* \"#utility.yul\":5456:5489   */\n      mstore\n        /* \"#utility.yul\":5271:5496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5502:5868   */\n    tag_156:\n        /* \"#utility.yul\":5644:5647   */\n      0x00\n        /* \"#utility.yul\":5665:5732   */\n      tag_216\n        /* \"#utility.yul\":5729:5731   */\n      0x26\n        /* \"#utility.yul\":5724:5727   */\n      dup4\n        /* \"#utility.yul\":5665:5732   */\n      tag_152\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5658:5732   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5834   */\n      tag_217\n        /* \"#utility.yul\":5830:5833   */\n      dup3\n        /* \"#utility.yul\":5741:5834   */\n      tag_155\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5859:5861   */\n      0x40\n        /* \"#utility.yul\":5854:5857   */\n      dup3\n        /* \"#utility.yul\":5850:5862   */\n      add\n        /* \"#utility.yul\":5843:5862   */\n      swap1\n      pop\n        /* \"#utility.yul\":5502:5868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5874:6293   */\n    tag_71:\n        /* \"#utility.yul\":6040:6044   */\n      0x00\n        /* \"#utility.yul\":6078:6080   */\n      0x20\n        /* \"#utility.yul\":6067:6076   */\n      dup3\n        /* \"#utility.yul\":6063:6081   */\n      add\n        /* \"#utility.yul\":6055:6081   */\n      swap1\n      pop\n        /* \"#utility.yul\":6127:6136   */\n      dup2\n        /* \"#utility.yul\":6121:6125   */\n      dup2\n        /* \"#utility.yul\":6117:6137   */\n      sub\n        /* \"#utility.yul\":6113:6114   */\n      0x00\n        /* \"#utility.yul\":6102:6111   */\n      dup4\n        /* \"#utility.yul\":6098:6115   */\n      add\n        /* \"#utility.yul\":6091:6138   */\n      mstore\n        /* \"#utility.yul\":6155:6286   */\n      tag_219\n        /* \"#utility.yul\":6281:6285   */\n      dup2\n        /* \"#utility.yul\":6155:6286   */\n      tag_156\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6147:6286   */\n      swap1\n      pop\n        /* \"#utility.yul\":5874:6293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6299:6474   */\n    tag_157:\n        /* \"#utility.yul\":6439:6466   */\n      0x446f6e6174696f6e20706572696f642068617320656e64656400000000000000\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6427:6433   */\n      dup3\n        /* \"#utility.yul\":6423:6437   */\n      add\n        /* \"#utility.yul\":6416:6467   */\n      mstore\n        /* \"#utility.yul\":6299:6474   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6480:6846   */\n    tag_158:\n        /* \"#utility.yul\":6622:6625   */\n      0x00\n        /* \"#utility.yul\":6643:6710   */\n      tag_222\n        /* \"#utility.yul\":6707:6709   */\n      0x19\n        /* \"#utility.yul\":6702:6705   */\n      dup4\n        /* \"#utility.yul\":6643:6710   */\n      tag_152\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6636:6710   */\n      swap2\n      pop\n        /* \"#utility.yul\":6719:6812   */\n      tag_223\n        /* \"#utility.yul\":6808:6811   */\n      dup3\n        /* \"#utility.yul\":6719:6812   */\n      tag_157\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6837:6839   */\n      0x20\n        /* \"#utility.yul\":6832:6835   */\n      dup3\n        /* \"#utility.yul\":6828:6840   */\n      add\n        /* \"#utility.yul\":6821:6840   */\n      swap1\n      pop\n        /* \"#utility.yul\":6480:6846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6852:7271   */\n    tag_74:\n        /* \"#utility.yul\":7018:7022   */\n      0x00\n        /* \"#utility.yul\":7056:7058   */\n      0x20\n        /* \"#utility.yul\":7045:7054   */\n      dup3\n        /* \"#utility.yul\":7041:7059   */\n      add\n        /* \"#utility.yul\":7033:7059   */\n      swap1\n      pop\n        /* \"#utility.yul\":7105:7114   */\n      dup2\n        /* \"#utility.yul\":7099:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7115   */\n      sub\n        /* \"#utility.yul\":7091:7092   */\n      0x00\n        /* \"#utility.yul\":7080:7089   */\n      dup4\n        /* \"#utility.yul\":7076:7093   */\n      add\n        /* \"#utility.yul\":7069:7116   */\n      mstore\n        /* \"#utility.yul\":7133:7264   */\n      tag_225\n        /* \"#utility.yul\":7259:7263   */\n      dup2\n        /* \"#utility.yul\":7133:7264   */\n      tag_158\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7125:7264   */\n      swap1\n      pop\n        /* \"#utility.yul\":6852:7271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7277:7457   */\n    tag_159:\n        /* \"#utility.yul\":7325:7402   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7322:7323   */\n      0x00\n        /* \"#utility.yul\":7315:7403   */\n      mstore\n        /* \"#utility.yul\":7422:7426   */\n      0x11\n        /* \"#utility.yul\":7419:7420   */\n      0x04\n        /* \"#utility.yul\":7412:7427   */\n      mstore\n        /* \"#utility.yul\":7446:7450   */\n      0x24\n        /* \"#utility.yul\":7443:7444   */\n      0x00\n        /* \"#utility.yul\":7436:7451   */\n      revert\n        /* \"#utility.yul\":7463:7654   */\n    tag_76:\n        /* \"#utility.yul\":7503:7506   */\n      0x00\n        /* \"#utility.yul\":7522:7542   */\n      tag_228\n        /* \"#utility.yul\":7540:7541   */\n      dup3\n        /* \"#utility.yul\":7522:7542   */\n      tag_142\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7517:7542   */\n      swap2\n      pop\n        /* \"#utility.yul\":7556:7576   */\n      tag_229\n        /* \"#utility.yul\":7574:7575   */\n      dup4\n        /* \"#utility.yul\":7556:7576   */\n      tag_142\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7551:7576   */\n      swap3\n      pop\n        /* \"#utility.yul\":7599:7600   */\n      dup3\n        /* \"#utility.yul\":7596:7597   */\n      dup3\n        /* \"#utility.yul\":7592:7601   */\n      add\n        /* \"#utility.yul\":7585:7601   */\n      swap1\n      pop\n        /* \"#utility.yul\":7620:7623   */\n      dup1\n        /* \"#utility.yul\":7617:7618   */\n      dup3\n        /* \"#utility.yul\":7614:7624   */\n      gt\n        /* \"#utility.yul\":7611:7647   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":7627:7645   */\n      tag_231\n      tag_159\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7611:7647   */\n    tag_230:\n        /* \"#utility.yul\":7463:7654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7660:7840   */\n    tag_100:\n        /* \"#utility.yul\":7708:7785   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7705:7706   */\n      0x00\n        /* \"#utility.yul\":7698:7786   */\n      mstore\n        /* \"#utility.yul\":7805:7809   */\n      0x32\n        /* \"#utility.yul\":7802:7803   */\n      0x04\n        /* \"#utility.yul\":7795:7810   */\n      mstore\n        /* \"#utility.yul\":7829:7833   */\n      0x24\n        /* \"#utility.yul\":7826:7827   */\n      0x00\n        /* \"#utility.yul\":7819:7834   */\n      revert\n        /* \"#utility.yul\":7846:8040   */\n    tag_122:\n        /* \"#utility.yul\":7886:7890   */\n      0x00\n        /* \"#utility.yul\":7906:7926   */\n      tag_234\n        /* \"#utility.yul\":7924:7925   */\n      dup3\n        /* \"#utility.yul\":7906:7926   */\n      tag_142\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7901:7926   */\n      swap2\n      pop\n        /* \"#utility.yul\":7940:7960   */\n      tag_235\n        /* \"#utility.yul\":7958:7959   */\n      dup4\n        /* \"#utility.yul\":7940:7960   */\n      tag_142\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7935:7960   */\n      swap3\n      pop\n        /* \"#utility.yul\":7984:7985   */\n      dup3\n        /* \"#utility.yul\":7981:7982   */\n      dup3\n        /* \"#utility.yul\":7977:7986   */\n      sub\n        /* \"#utility.yul\":7969:7986   */\n      swap1\n      pop\n        /* \"#utility.yul\":8008:8009   */\n      dup2\n        /* \"#utility.yul\":8002:8006   */\n      dup2\n        /* \"#utility.yul\":7999:8010   */\n      gt\n        /* \"#utility.yul\":7996:8033   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":8013:8031   */\n      tag_237\n      tag_159\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7996:8033   */\n    tag_236:\n        /* \"#utility.yul\":7846:8040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8046:8217   */\n    tag_130:\n        /* \"#utility.yul\":8085:8088   */\n      0x00\n        /* \"#utility.yul\":8108:8132   */\n      tag_239\n        /* \"#utility.yul\":8126:8131   */\n      dup3\n        /* \"#utility.yul\":8108:8132   */\n      tag_142\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8099:8132   */\n      swap2\n      pop\n        /* \"#utility.yul\":8154:8158   */\n      0x00\n        /* \"#utility.yul\":8147:8152   */\n      dup3\n        /* \"#utility.yul\":8144:8159   */\n      sub\n        /* \"#utility.yul\":8141:8182   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":8162:8180   */\n      tag_241\n      tag_159\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8141:8182   */\n    tag_240:\n        /* \"#utility.yul\":8209:8210   */\n      0x01\n        /* \"#utility.yul\":8202:8207   */\n      dup3\n        /* \"#utility.yul\":8198:8211   */\n      sub\n        /* \"#utility.yul\":8191:8211   */\n      swap1\n      pop\n        /* \"#utility.yul\":8046:8217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122079d4349efc7044006f3d5c7712d80bee6145711bd20f9f3129b70d99f0601b8d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 171,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1056:3",
										"nodeType": "YulBlock",
										"src": "0:1056:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "638:32:3",
													"nodeType": "YulBlock",
													"src": "638:32:3",
													"statements": [
														{
															"nativeSrc": "648:16:3",
															"nodeType": "YulAssignment",
															"src": "648:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:3",
																"nodeType": "YulIdentifier",
																"src": "659:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:3",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:3",
														"nodeType": "YulTypedName",
														"src": "630:7:3",
														"type": ""
													}
												],
												"src": "593:77:3"
											},
											{
												"body": {
													"nativeSrc": "704:152:3",
													"nodeType": "YulBlock",
													"src": "704:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "721:1:3",
																		"nodeType": "YulLiteral",
																		"src": "721:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "724:77:3",
																		"nodeType": "YulLiteral",
																		"src": "724:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "714:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "714:6:3"
																},
																"nativeSrc": "714:88:3",
																"nodeType": "YulFunctionCall",
																"src": "714:88:3"
															},
															"nativeSrc": "714:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "714:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:3",
																		"nodeType": "YulLiteral",
																		"src": "818:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "821:4:3",
																		"nodeType": "YulLiteral",
																		"src": "821:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "811:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:3"
																},
																"nativeSrc": "811:15:3",
																"nodeType": "YulFunctionCall",
																"src": "811:15:3"
															},
															"nativeSrc": "811:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "811:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "842:1:3",
																		"nodeType": "YulLiteral",
																		"src": "842:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "845:4:3",
																		"nodeType": "YulLiteral",
																		"src": "845:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "835:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:3"
																},
																"nativeSrc": "835:15:3",
																"nodeType": "YulFunctionCall",
																"src": "835:15:3"
															},
															"nativeSrc": "835:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "835:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "676:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "676:180:3"
											},
											{
												"body": {
													"nativeSrc": "906:147:3",
													"nodeType": "YulBlock",
													"src": "906:147:3",
													"statements": [
														{
															"nativeSrc": "916:25:3",
															"nodeType": "YulAssignment",
															"src": "916:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "939:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "939:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "921:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "921:17:3"
																},
																"nativeSrc": "921:20:3",
																"nodeType": "YulFunctionCall",
																"src": "921:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "916:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "916:1:3"
																}
															]
														},
														{
															"nativeSrc": "950:25:3",
															"nodeType": "YulAssignment",
															"src": "950:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "973:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "973:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "955:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "955:17:3"
																},
																"nativeSrc": "955:20:3",
																"nodeType": "YulFunctionCall",
																"src": "955:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "950:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "950:1:3"
																}
															]
														},
														{
															"nativeSrc": "984:16:3",
															"nodeType": "YulAssignment",
															"src": "984:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "995:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "998:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "998:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "991:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "991:3:3"
																},
																"nativeSrc": "991:9:3",
																"nodeType": "YulFunctionCall",
																"src": "991:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "984:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "984:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1024:22:3",
																"nodeType": "YulBlock",
																"src": "1024:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1026:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1026:16:3"
																			},
																			"nativeSrc": "1026:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:18:3"
																		},
																		"nativeSrc": "1026:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1016:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1016:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1019:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1019:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1013:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1013:2:3"
																},
																"nativeSrc": "1013:10:3",
																"nodeType": "YulFunctionCall",
																"src": "1013:10:3"
															},
															"nativeSrc": "1010:36:3",
															"nodeType": "YulIf",
															"src": "1010:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "862:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "893:1:3",
														"nodeType": "YulTypedName",
														"src": "893:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "896:1:3",
														"nodeType": "YulTypedName",
														"src": "896:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "902:3:3",
														"nodeType": "YulTypedName",
														"src": "902:3:3",
														"type": ""
													}
												],
												"src": "862:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007891906101ab565b60405180910390fd5b610090816100ab60201b60201c565b506203f480426100a091906101fa565b60028190555061022d565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101958261016c565b9050919050565b6101a58161018b565b82525050565b5f6020820190506101be5f83018461019c565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610204826101c4565b915061020f836101c4565b9250828201905080821115610227576102266101cd565b5b92915050565b610e4a8061023a5f395ff3fe60806040526004361061007a575f3560e01c8063d6387ed81161004d578063d6387ed814610104578063ed88c68e1461012e578063f12a4a5314610138578063f2fde38b146101625761007a565b80633ccfd60b1461007e578063410a1d3214610088578063715018a6146100c45780638da5cb5b146100da575b5f5ffd5b61008661018a565b005b348015610093575f5ffd5b506100ae60048036038101906100a99190610a56565b61027d565b6040516100bb9190610a99565b60405180910390f35b3480156100cf575f5ffd5b506100d86102c3565b005b3480156100e5575f5ffd5b506100ee6102d6565b6040516100fb9190610ac1565b60405180910390f35b34801561010f575f5ffd5b506101186102fd565b6040516101259190610b7f565b60405180910390f35b61013661037c565b005b348015610143575f5ffd5b5061014c6104b5565b6040516101599190610a99565b60405180910390f35b34801561016d575f5ffd5b5061018860048036038101906101839190610a56565b6104bb565b005b61019261053f565b5f4790505f81116101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf90610bf2565b60405180910390fd5b6101e06102d6565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610222573d5f5f3e3d5ffd5b5061022b6102d6565b73ffffffffffffffffffffffffffffffffffffffff167f106aac375bbcf013d1e52338bbf9e740009a1a3a6869f8daa1b72aa1620f5fec8242604051610272929190610c10565b60405180910390a250565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102cb61053f565b6102d45f6105c6565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103056109d6565b60038080602002604051908101604052809291908260038015610372576020028201915b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610329575b5050505050905090565b5f3490505f81116103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610ca7565b60405180910390fd5b6002544210610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd90610d0f565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104529190610d5a565b9250508190555061046233610687565b3373ffffffffffffffffffffffffffffffffffffffff167f106aac375bbcf013d1e52338bbf9e740009a1a3a6869f8daa1b72aa1620f5fec34426040516104aa929190610c10565b60405180910390a250565b60025481565b6104c361053f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610533575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161052a9190610ac1565b60405180910390fd5b61053c816105c6565b50565b6105476109cf565b73ffffffffffffffffffffffffffffffffffffffff166105656102d6565b73ffffffffffffffffffffffffffffffffffffffff16146105c4576105886109cf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105bb9190610ac1565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f5f90505f5f90505b6003811015610819578373ffffffffffffffffffffffffffffffffffffffff166003826003811061070557610704610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361074a5760019150610819565b5f73ffffffffffffffffffffffffffffffffffffffff166003826003811061077557610774610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361080c5783600382600381106107c6576107c5610d8d565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506109cc565b80806001019150506106d1565b5080156108275750506109cc565b5f5f90505b60038110156109c85760015f6003836003811061084c5761084b610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548311156109bb575f600290505b818111156109625760036001826108cb9190610dba565b600381106108dc576108db610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003826003811061091157610910610d8d565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061095a90610ded565b9150506108b4565b50836003826003811061097857610977610d8d565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109c8565b808060010191505061082c565b5050505b50565b5f33905090565b6040518060600160405280600390602082028036833780820191505090505090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a25826109fc565b9050919050565b610a3581610a1b565b8114610a3f575f5ffd5b50565b5f81359050610a5081610a2c565b92915050565b5f60208284031215610a6b57610a6a6109f8565b5b5f610a7884828501610a42565b91505092915050565b5f819050919050565b610a9381610a81565b82525050565b5f602082019050610aac5f830184610a8a565b92915050565b610abb81610a1b565b82525050565b5f602082019050610ad45f830184610ab2565b92915050565b5f60039050919050565b5f81905092915050565b5f819050919050565b610b0081610a1b565b82525050565b5f610b118383610af7565b60208301905092915050565b5f602082019050919050565b610b3281610ada565b610b3c8184610ae4565b9250610b4782610aee565b805f5b83811015610b77578151610b5e8782610b06565b9650610b6983610b1d565b925050600181019050610b4a565b505050505050565b5f606082019050610b925f830184610b29565b92915050565b5f82825260208201905092915050565b7f6e6f2062616c616e6365210000000000000000000000000000000000000000005f82015250565b5f610bdc600b83610b98565b9150610be782610ba8565b602082019050919050565b5f6020820190508181035f830152610c0981610bd0565b9050919050565b5f604082019050610c235f830185610a8a565b610c306020830184610a8a565b9392505050565b7f446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f610c91602683610b98565b9150610c9c82610c37565b604082019050919050565b5f6020820190508181035f830152610cbe81610c85565b9050919050565b7f446f6e6174696f6e20706572696f642068617320656e646564000000000000005f82015250565b5f610cf9601983610b98565b9150610d0482610cc5565b602082019050919050565b5f6020820190508181035f830152610d2681610ced565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d6482610a81565b9150610d6f83610a81565b9250828201905080821115610d8757610d86610d2d565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f610dc482610a81565b9150610dcf83610a81565b9250828203905081811115610de757610de6610d2d565b5b92915050565b5f610df782610a81565b91505f8203610e0957610e08610d2d565b5b60018203905091905056fea264697066735822122079d4349efc7044006f3d5c7712d80bee6145711bd20f9f3129b70d99f0601b8d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0xAB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x3F480 TIMESTAMP PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x22D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x195 DUP3 PUSH2 0x16C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A5 DUP2 PUSH2 0x18B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BE PUSH0 DUP4 ADD DUP5 PUSH2 0x19C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x204 DUP3 PUSH2 0x1C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F DUP4 PUSH2 0x1C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x1CD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE4A DUP1 PUSH2 0x23A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD6387ED8 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xD6387ED8 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xF12A4A53 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x162 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x86 PUSH2 0x18A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x2C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x37C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x53F JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E0 PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106AAC375BBCF013D1E52338BBF9E740009A1A3A6869F8DAA1B72AA1620F5FEC DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x272 SWAP3 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x53F JUMP JUMPDEST PUSH2 0x2D4 PUSH0 PUSH2 0x5C6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x305 PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x329 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B9 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FD SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x462 CALLER PUSH2 0x687 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106AAC375BBCF013D1E52338BBF9E740009A1A3A6869F8DAA1B72AA1620F5FEC CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x53F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x533 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53C DUP2 PUSH2 0x5C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x547 PUSH2 0x9CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x565 PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C4 JUMPI PUSH2 0x588 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x819 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x705 JUMPI PUSH2 0x704 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74A JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x819 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x775 JUMPI PUSH2 0x774 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80C JUMPI DUP4 PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x7C6 JUMPI PUSH2 0x7C5 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x9CC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6D1 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x827 JUMPI POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x9BB JUMPI PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x962 JUMPI PUSH1 0x3 PUSH1 0x1 DUP3 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x95A SWAP1 PUSH2 0xDED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8B4 JUMP JUMPDEST POP DUP4 PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x978 JUMPI PUSH2 0x977 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x9C8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x82C JUMP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP3 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP2 EQ PUSH2 0xA3F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA50 DUP2 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6B JUMPI PUSH2 0xA6A PUSH2 0x9F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA78 DUP5 DUP3 DUP6 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA93 DUP2 PUSH2 0xA81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAC PUSH0 DUP4 ADD DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD4 PUSH0 DUP4 ADD DUP5 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB00 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB11 DUP4 DUP4 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xADA JUMP JUMPDEST PUSH2 0xB3C DUP2 DUP5 PUSH2 0xAE4 JUMP JUMPDEST SWAP3 POP PUSH2 0xB47 DUP3 PUSH2 0xAEE JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB77 JUMPI DUP2 MLOAD PUSH2 0xB5E DUP8 DUP3 PUSH2 0xB06 JUMP JUMPDEST SWAP7 POP PUSH2 0xB69 DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB4A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB92 PUSH0 DUP4 ADD DUP5 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F2062616C616E636521000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBDC PUSH1 0xB DUP4 PUSH2 0xB98 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE7 DUP3 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC09 DUP2 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH0 DUP4 ADD DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH2 0xC30 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC91 PUSH1 0x26 DUP4 PUSH2 0xB98 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9C DUP3 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCBE DUP2 PUSH2 0xC85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20706572696F642068617320656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 PUSH1 0x19 DUP4 PUSH2 0xB98 JUMP JUMPDEST SWAP2 POP PUSH2 0xD04 DUP3 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD26 DUP2 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD64 DUP3 PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP4 PUSH2 0xA81 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD87 JUMPI PUSH2 0xD86 PUSH2 0xD2D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDC4 DUP3 PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCF DUP4 PUSH2 0xA81 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xD2D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF7 DUP3 PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xE09 JUMPI PUSH2 0xE08 PUSH2 0xD2D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD4349EFC7044006F3D5C7712D80BEE6145711BD20F9F3129B70D SWAP10 CREATE PUSH1 0x1B DUP14 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "820:2713:2:-:0;;;1385:94;;;;;;;;;;1407:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1466:6:2::1;1448:15;:24;;;;:::i;:::-;1430:15;:42;;;;820:2713:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:180::-;724:77;721:1;714:88;821:4;818:1;811:15;845:4;842:1;835:15;862:191;902:3;921:20;939:1;921:20;:::i;:::-;916:25;;955:20;973:1;955:20;:::i;:::-;950:25;;998:1;995;991:9;984:16;;1019:3;1016:1;1013:10;1010:36;;;1026:18;;:::i;:::-;1010:36;862:191;;;;:::o;820:2713:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1343,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2511,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1478,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donate_270": {
									"entryPoint": 892,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donationEndTime_206": {
									"entryPoint": 1205,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDonation_431": {
									"entryPoint": 637,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTopDonors_441": {
									"entryPoint": 765,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 726,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 707,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1211,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTopDonnors_381": {
									"entryPoint": 1671,
									"id": 381,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_419": {
									"entryPoint": 394,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$3_memory_ptr__to_t_array$_t_address_$3_memory_ptr__fromStack_reversed": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 2845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8220:3",
										"nodeType": "YulBlock",
										"src": "0:8220:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1221:32:3",
													"nodeType": "YulBlock",
													"src": "1221:32:3",
													"statements": [
														{
															"nativeSrc": "1231:16:3",
															"nodeType": "YulAssignment",
															"src": "1231:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:3",
																"nodeType": "YulIdentifier",
																"src": "1242:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:3",
														"nodeType": "YulTypedName",
														"src": "1203:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:3",
														"nodeType": "YulTypedName",
														"src": "1213:7:3",
														"type": ""
													}
												],
												"src": "1176:77:3"
											},
											{
												"body": {
													"nativeSrc": "1324:53:3",
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nativeSrc": "1346:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nativeSrc": "1334:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nativeSrc": "1334:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:3",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:3",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nativeSrc": "1481:124:3",
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nativeSrc": "1491:26:3",
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nativeSrc": "1499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nativeSrc": "1580:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nativeSrc": "1527:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nativeSrc": "1527:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:3",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:3",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:3",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nativeSrc": "1676:53:3",
													"nodeType": "YulBlock",
													"src": "1676:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:3"
																		},
																		"nativeSrc": "1698:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nativeSrc": "1686:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:3"
															},
															"nativeSrc": "1686:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:3",
														"nodeType": "YulTypedName",
														"src": "1664:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:3",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													}
												],
												"src": "1611:118:3"
											},
											{
												"body": {
													"nativeSrc": "1833:124:3",
													"nodeType": "YulBlock",
													"src": "1833:124:3",
													"statements": [
														{
															"nativeSrc": "1843:26:3",
															"nodeType": "YulAssignment",
															"src": "1843:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:3"
																},
																"nativeSrc": "1851:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:3"
																		},
																		"nativeSrc": "1932:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:3"
																},
																"nativeSrc": "1879:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:3"
															},
															"nativeSrc": "1879:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:3",
														"nodeType": "YulTypedName",
														"src": "1805:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:3",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:3",
														"nodeType": "YulTypedName",
														"src": "1828:4:3",
														"type": ""
													}
												],
												"src": "1735:222:3"
											},
											{
												"body": {
													"nativeSrc": "2035:32:3",
													"nodeType": "YulBlock",
													"src": "2035:32:3",
													"statements": [
														{
															"nativeSrc": "2046:14:3",
															"nodeType": "YulAssignment",
															"src": "2046:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "2056:4:3",
																"nodeType": "YulLiteral",
																"src": "2056:4:3",
																"type": "",
																"value": "0x03"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2046:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "1963:104:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2018:5:3",
														"nodeType": "YulTypedName",
														"src": "2018:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2028:6:3",
														"nodeType": "YulTypedName",
														"src": "2028:6:3",
														"type": ""
													}
												],
												"src": "1963:104:3"
											},
											{
												"body": {
													"nativeSrc": "2182:34:3",
													"nodeType": "YulBlock",
													"src": "2182:34:3",
													"statements": [
														{
															"nativeSrc": "2192:18:3",
															"nodeType": "YulAssignment",
															"src": "2192:18:3",
															"value": {
																"name": "pos",
																"nativeSrc": "2207:3:3",
																"nodeType": "YulIdentifier",
																"src": "2207:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2192:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2192:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack",
												"nativeSrc": "2073:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2154:3:3",
														"nodeType": "YulTypedName",
														"src": "2154:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2159:6:3",
														"nodeType": "YulTypedName",
														"src": "2159:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2170:11:3",
														"nodeType": "YulTypedName",
														"src": "2170:11:3",
														"type": ""
													}
												],
												"src": "2073:143:3"
											},
											{
												"body": {
													"nativeSrc": "2292:28:3",
													"nodeType": "YulBlock",
													"src": "2292:28:3",
													"statements": [
														{
															"nativeSrc": "2302:11:3",
															"nodeType": "YulAssignment",
															"src": "2302:11:3",
															"value": {
																"name": "ptr",
																"nativeSrc": "2310:3:3",
																"nodeType": "YulIdentifier",
																"src": "2310:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2302:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2302:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "2222:98:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2279:3:3",
														"nodeType": "YulTypedName",
														"src": "2279:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2287:4:3",
														"nodeType": "YulTypedName",
														"src": "2287:4:3",
														"type": ""
													}
												],
												"src": "2222:98:3"
											},
											{
												"body": {
													"nativeSrc": "2381:53:3",
													"nodeType": "YulBlock",
													"src": "2381:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2398:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2398:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2421:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2421:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2403:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2403:17:3"
																		},
																		"nativeSrc": "2403:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2391:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:3"
																},
																"nativeSrc": "2391:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2391:37:3"
															},
															"nativeSrc": "2391:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2391:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2326:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2369:5:3",
														"nodeType": "YulTypedName",
														"src": "2369:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2376:3:3",
														"nodeType": "YulTypedName",
														"src": "2376:3:3",
														"type": ""
													}
												],
												"src": "2326:108:3"
											},
											{
												"body": {
													"nativeSrc": "2520:99:3",
													"nodeType": "YulBlock",
													"src": "2520:99:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2564:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2564:6:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2572:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "2530:33:3",
																	"nodeType": "YulIdentifier",
																	"src": "2530:33:3"
																},
																"nativeSrc": "2530:46:3",
																"nodeType": "YulFunctionCall",
																"src": "2530:46:3"
															},
															"nativeSrc": "2530:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "2530:46:3"
														},
														{
															"nativeSrc": "2585:28:3",
															"nodeType": "YulAssignment",
															"src": "2585:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2603:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2603:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2608:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2608:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2599:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2599:3:3"
																},
																"nativeSrc": "2599:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2599:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "2585:10:3",
																	"nodeType": "YulIdentifier",
																	"src": "2585:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "2440:179:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "2493:6:3",
														"nodeType": "YulTypedName",
														"src": "2493:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2501:3:3",
														"nodeType": "YulTypedName",
														"src": "2501:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "2509:10:3",
														"nodeType": "YulTypedName",
														"src": "2509:10:3",
														"type": ""
													}
												],
												"src": "2440:179:3"
											},
											{
												"body": {
													"nativeSrc": "2698:38:3",
													"nodeType": "YulBlock",
													"src": "2698:38:3",
													"statements": [
														{
															"nativeSrc": "2708:22:3",
															"nodeType": "YulAssignment",
															"src": "2708:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2720:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2720:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2725:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2725:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2716:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2716:3:3"
																},
																"nativeSrc": "2716:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2716:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "2708:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2708:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "2625:111:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2685:3:3",
														"nodeType": "YulTypedName",
														"src": "2685:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "2693:4:3",
														"nodeType": "YulTypedName",
														"src": "2693:4:3",
														"type": ""
													}
												],
												"src": "2625:111:3"
											},
											{
												"body": {
													"nativeSrc": "2886:582:3",
													"nodeType": "YulBlock",
													"src": "2886:582:3",
													"statements": [
														{
															"nativeSrc": "2896:66:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2896:66:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2956:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2956:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$3_memory_ptr",
																	"nativeSrc": "2910:45:3",
																	"nodeType": "YulIdentifier",
																	"src": "2910:45:3"
																},
																"nativeSrc": "2910:52:3",
																"nodeType": "YulFunctionCall",
																"src": "2910:52:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2900:6:3",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2971:91:3",
															"nodeType": "YulAssignment",
															"src": "2971:91:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3050:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3050:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3055:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3055:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack",
																	"nativeSrc": "2978:71:3",
																	"nodeType": "YulIdentifier",
																	"src": "2978:71:3"
																},
																"nativeSrc": "2978:84:3",
																"nodeType": "YulFunctionCall",
																"src": "2978:84:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2971:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2971:3:3"
																}
															]
														},
														{
															"nativeSrc": "3071:69:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3071:69:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3134:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3134:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$3_memory_ptr",
																	"nativeSrc": "3086:47:3",
																	"nodeType": "YulIdentifier",
																	"src": "3086:47:3"
																},
																"nativeSrc": "3086:54:3",
																"nodeType": "YulFunctionCall",
																"src": "3086:54:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3075:7:3",
																	"nodeType": "YulTypedName",
																	"src": "3075:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3149:21:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3149:21:3",
															"value": {
																"name": "baseRef",
																"nativeSrc": "3163:7:3",
																"nodeType": "YulIdentifier",
																"src": "3163:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3153:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3153:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3239:222:3",
																"nodeType": "YulBlock",
																"src": "3239:222:3",
																"statements": [
																	{
																		"nativeSrc": "3253:34:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3253:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3280:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "3280:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3274:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:3"
																			},
																			"nativeSrc": "3274:13:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3274:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "3257:13:3",
																				"nodeType": "YulTypedName",
																				"src": "3257:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3300:70:3",
																		"nodeType": "YulAssignment",
																		"src": "3300:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "3351:13:3",
																					"nodeType": "YulIdentifier",
																					"src": "3351:13:3"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "3366:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3366:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "3307:43:3",
																				"nodeType": "YulIdentifier",
																				"src": "3307:43:3"
																			},
																			"nativeSrc": "3307:63:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3307:63:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3300:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3300:3:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3383:68:3",
																		"nodeType": "YulAssignment",
																		"src": "3383:68:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3444:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "3444:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$3_memory_ptr",
																				"nativeSrc": "3393:50:3",
																				"nodeType": "YulIdentifier",
																				"src": "3393:50:3"
																			},
																			"nativeSrc": "3393:58:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3393:58:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3383:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3383:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3201:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3201:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3204:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3198:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3198:2:3"
																},
																"nativeSrc": "3198:13:3",
																"nodeType": "YulFunctionCall",
																"src": "3198:13:3"
															},
															"nativeSrc": "3179:282:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3212:18:3",
																"nodeType": "YulBlock",
																"src": "3212:18:3",
																"statements": [
																	{
																		"nativeSrc": "3214:14:3",
																		"nodeType": "YulAssignment",
																		"src": "3214:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3223:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "3223:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3226:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3226:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3219:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3219:3:3"
																			},
																			"nativeSrc": "3219:9:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3219:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3214:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "3214:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3183:14:3",
																"nodeType": "YulBlock",
																"src": "3183:14:3",
																"statements": [
																	{
																		"nativeSrc": "3185:10:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3185:10:3",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3194:1:3",
																			"nodeType": "YulLiteral",
																			"src": "3194:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "3189:1:3",
																				"nodeType": "YulTypedName",
																				"src": "3189:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3179:282:3"
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack",
												"nativeSrc": "2774:694:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2873:5:3",
														"nodeType": "YulTypedName",
														"src": "2873:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2880:3:3",
														"nodeType": "YulTypedName",
														"src": "2880:3:3",
														"type": ""
													}
												],
												"src": "2774:694:3"
											},
											{
												"body": {
													"nativeSrc": "3618:170:3",
													"nodeType": "YulBlock",
													"src": "3618:170:3",
													"statements": [
														{
															"nativeSrc": "3628:26:3",
															"nodeType": "YulAssignment",
															"src": "3628:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3640:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3640:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3651:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3651:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3636:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3636:3:3"
																},
																"nativeSrc": "3636:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3636:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3628:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3628:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3754:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3754:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3767:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3767:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3778:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3778:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3763:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3763:3:3"
																		},
																		"nativeSrc": "3763:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3763:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack",
																	"nativeSrc": "3664:89:3",
																	"nodeType": "YulIdentifier",
																	"src": "3664:89:3"
																},
																"nativeSrc": "3664:117:3",
																"nodeType": "YulFunctionCall",
																"src": "3664:117:3"
															},
															"nativeSrc": "3664:117:3",
															"nodeType": "YulExpressionStatement",
															"src": "3664:117:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$3_memory_ptr__to_t_array$_t_address_$3_memory_ptr__fromStack_reversed",
												"nativeSrc": "3474:314:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3590:9:3",
														"nodeType": "YulTypedName",
														"src": "3590:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3602:6:3",
														"nodeType": "YulTypedName",
														"src": "3602:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3613:4:3",
														"nodeType": "YulTypedName",
														"src": "3613:4:3",
														"type": ""
													}
												],
												"src": "3474:314:3"
											},
											{
												"body": {
													"nativeSrc": "3890:73:3",
													"nodeType": "YulBlock",
													"src": "3890:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3907:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3907:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3912:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3900:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:3"
																},
																"nativeSrc": "3900:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3900:19:3"
															},
															"nativeSrc": "3900:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3900:19:3"
														},
														{
															"nativeSrc": "3928:29:3",
															"nodeType": "YulAssignment",
															"src": "3928:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3947:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3947:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3952:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3952:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3943:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3943:3:3"
																},
																"nativeSrc": "3943:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3943:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3928:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3928:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3794:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3862:3:3",
														"nodeType": "YulTypedName",
														"src": "3862:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3867:6:3",
														"nodeType": "YulTypedName",
														"src": "3867:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3878:11:3",
														"nodeType": "YulTypedName",
														"src": "3878:11:3",
														"type": ""
													}
												],
												"src": "3794:169:3"
											},
											{
												"body": {
													"nativeSrc": "4075:55:3",
													"nodeType": "YulBlock",
													"src": "4075:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4097:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4097:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4105:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4105:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4093:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:3"
																		},
																		"nativeSrc": "4093:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:14:3"
																	},
																	{
																		"hexValue": "6e6f2062616c616e636521",
																		"kind": "string",
																		"nativeSrc": "4109:13:3",
																		"nodeType": "YulLiteral",
																		"src": "4109:13:3",
																		"type": "",
																		"value": "no balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4086:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:3"
																},
																"nativeSrc": "4086:37:3",
																"nodeType": "YulFunctionCall",
																"src": "4086:37:3"
															},
															"nativeSrc": "4086:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "4086:37:3"
														}
													]
												},
												"name": "store_literal_in_memory_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda",
												"nativeSrc": "3969:161:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4067:6:3",
														"nodeType": "YulTypedName",
														"src": "4067:6:3",
														"type": ""
													}
												],
												"src": "3969:161:3"
											},
											{
												"body": {
													"nativeSrc": "4282:220:3",
													"nodeType": "YulBlock",
													"src": "4282:220:3",
													"statements": [
														{
															"nativeSrc": "4292:74:3",
															"nodeType": "YulAssignment",
															"src": "4292:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4358:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4358:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4363:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4363:2:3",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4299:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4299:58:3"
																},
																"nativeSrc": "4299:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4299:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4292:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4292:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4464:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4464:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda",
																	"nativeSrc": "4375:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4375:88:3"
																},
																"nativeSrc": "4375:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4375:93:3"
															},
															"nativeSrc": "4375:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4375:93:3"
														},
														{
															"nativeSrc": "4477:19:3",
															"nodeType": "YulAssignment",
															"src": "4477:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4488:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4488:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4493:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4493:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4484:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:3:3"
																},
																"nativeSrc": "4484:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4484:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4477:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4477:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4136:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4270:3:3",
														"nodeType": "YulTypedName",
														"src": "4270:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4278:3:3",
														"nodeType": "YulTypedName",
														"src": "4278:3:3",
														"type": ""
													}
												],
												"src": "4136:366:3"
											},
											{
												"body": {
													"nativeSrc": "4679:248:3",
													"nodeType": "YulBlock",
													"src": "4679:248:3",
													"statements": [
														{
															"nativeSrc": "4689:26:3",
															"nodeType": "YulAssignment",
															"src": "4689:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4701:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4701:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4712:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4712:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4697:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:3"
																},
																"nativeSrc": "4697:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4697:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4689:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4689:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4736:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4736:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4747:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4747:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4732:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4732:3:3"
																		},
																		"nativeSrc": "4732:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4732:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4755:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4755:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4761:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4761:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4751:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:3"
																		},
																		"nativeSrc": "4751:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4751:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4725:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:3"
																},
																"nativeSrc": "4725:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4725:47:3"
															},
															"nativeSrc": "4725:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4725:47:3"
														},
														{
															"nativeSrc": "4781:139:3",
															"nodeType": "YulAssignment",
															"src": "4781:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4915:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4915:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4789:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4789:124:3"
																},
																"nativeSrc": "4789:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4789:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4781:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4781:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4508:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4659:9:3",
														"nodeType": "YulTypedName",
														"src": "4659:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4674:4:3",
														"nodeType": "YulTypedName",
														"src": "4674:4:3",
														"type": ""
													}
												],
												"src": "4508:419:3"
											},
											{
												"body": {
													"nativeSrc": "5059:206:3",
													"nodeType": "YulBlock",
													"src": "5059:206:3",
													"statements": [
														{
															"nativeSrc": "5069:26:3",
															"nodeType": "YulAssignment",
															"src": "5069:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5081:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5081:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5092:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5092:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5077:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:3"
																},
																"nativeSrc": "5077:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5077:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5069:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5069:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5149:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5149:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5162:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5162:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5173:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5173:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5158:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5158:3:3"
																		},
																		"nativeSrc": "5158:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5158:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5105:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5105:43:3"
																},
																"nativeSrc": "5105:71:3",
																"nodeType": "YulFunctionCall",
																"src": "5105:71:3"
															},
															"nativeSrc": "5105:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "5105:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5230:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5230:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:3"
																		},
																		"nativeSrc": "5239:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5186:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5186:43:3"
																},
																"nativeSrc": "5186:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5186:72:3"
															},
															"nativeSrc": "5186:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5186:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4933:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5023:9:3",
														"nodeType": "YulTypedName",
														"src": "5023:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5035:6:3",
														"nodeType": "YulTypedName",
														"src": "5035:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5043:6:3",
														"nodeType": "YulTypedName",
														"src": "5043:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5054:4:3",
														"nodeType": "YulTypedName",
														"src": "5054:4:3",
														"type": ""
													}
												],
												"src": "4933:332:3"
											},
											{
												"body": {
													"nativeSrc": "5377:119:3",
													"nodeType": "YulBlock",
													"src": "5377:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5399:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5399:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5407:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5407:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5395:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:3"
																		},
																		"nativeSrc": "5395:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:14:3"
																	},
																	{
																		"hexValue": "446f6e6174696f6e20616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "5411:34:3",
																		"nodeType": "YulLiteral",
																		"src": "5411:34:3",
																		"type": "",
																		"value": "Donation amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5388:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:3"
																},
																"nativeSrc": "5388:58:3",
																"nodeType": "YulFunctionCall",
																"src": "5388:58:3"
															},
															"nativeSrc": "5388:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "5388:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5467:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5467:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5475:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5475:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5463:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:3"
																		},
																		"nativeSrc": "5463:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:15:3"
																	},
																	{
																		"hexValue": "7468616e2030",
																		"kind": "string",
																		"nativeSrc": "5480:8:3",
																		"nodeType": "YulLiteral",
																		"src": "5480:8:3",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5456:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:3"
																},
																"nativeSrc": "5456:33:3",
																"nodeType": "YulFunctionCall",
																"src": "5456:33:3"
															},
															"nativeSrc": "5456:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "5456:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979",
												"nativeSrc": "5271:225:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5369:6:3",
														"nodeType": "YulTypedName",
														"src": "5369:6:3",
														"type": ""
													}
												],
												"src": "5271:225:3"
											},
											{
												"body": {
													"nativeSrc": "5648:220:3",
													"nodeType": "YulBlock",
													"src": "5648:220:3",
													"statements": [
														{
															"nativeSrc": "5658:74:3",
															"nodeType": "YulAssignment",
															"src": "5658:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5724:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5724:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5729:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5729:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5665:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5665:58:3"
																},
																"nativeSrc": "5665:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5665:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5658:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5830:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5830:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979",
																	"nativeSrc": "5741:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5741:88:3"
																},
																"nativeSrc": "5741:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5741:93:3"
															},
															"nativeSrc": "5741:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5741:93:3"
														},
														{
															"nativeSrc": "5843:19:3",
															"nodeType": "YulAssignment",
															"src": "5843:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5854:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5854:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5859:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5859:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5850:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5850:3:3"
																},
																"nativeSrc": "5850:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5850:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5843:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5502:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5636:3:3",
														"nodeType": "YulTypedName",
														"src": "5636:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5644:3:3",
														"nodeType": "YulTypedName",
														"src": "5644:3:3",
														"type": ""
													}
												],
												"src": "5502:366:3"
											},
											{
												"body": {
													"nativeSrc": "6045:248:3",
													"nodeType": "YulBlock",
													"src": "6045:248:3",
													"statements": [
														{
															"nativeSrc": "6055:26:3",
															"nodeType": "YulAssignment",
															"src": "6055:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6067:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6067:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6078:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6078:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6063:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:3"
																},
																"nativeSrc": "6063:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6063:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6055:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6055:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6102:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6102:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6113:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6113:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6098:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6098:3:3"
																		},
																		"nativeSrc": "6098:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6098:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6121:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6121:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6127:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6127:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6117:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:3"
																		},
																		"nativeSrc": "6117:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6117:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6091:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6091:6:3"
																},
																"nativeSrc": "6091:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6091:47:3"
															},
															"nativeSrc": "6091:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6091:47:3"
														},
														{
															"nativeSrc": "6147:139:3",
															"nodeType": "YulAssignment",
															"src": "6147:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6281:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6155:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "6155:124:3"
																},
																"nativeSrc": "6155:131:3",
																"nodeType": "YulFunctionCall",
																"src": "6155:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6147:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6147:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5874:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6025:9:3",
														"nodeType": "YulTypedName",
														"src": "6025:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6040:4:3",
														"nodeType": "YulTypedName",
														"src": "6040:4:3",
														"type": ""
													}
												],
												"src": "5874:419:3"
											},
											{
												"body": {
													"nativeSrc": "6405:69:3",
													"nodeType": "YulBlock",
													"src": "6405:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6427:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6427:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6423:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6423:3:3"
																		},
																		"nativeSrc": "6423:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6423:14:3"
																	},
																	{
																		"hexValue": "446f6e6174696f6e20706572696f642068617320656e646564",
																		"kind": "string",
																		"nativeSrc": "6439:27:3",
																		"nodeType": "YulLiteral",
																		"src": "6439:27:3",
																		"type": "",
																		"value": "Donation period has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6416:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:3"
																},
																"nativeSrc": "6416:51:3",
																"nodeType": "YulFunctionCall",
																"src": "6416:51:3"
															},
															"nativeSrc": "6416:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "6416:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
												"nativeSrc": "6299:175:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6397:6:3",
														"nodeType": "YulTypedName",
														"src": "6397:6:3",
														"type": ""
													}
												],
												"src": "6299:175:3"
											},
											{
												"body": {
													"nativeSrc": "6626:220:3",
													"nodeType": "YulBlock",
													"src": "6626:220:3",
													"statements": [
														{
															"nativeSrc": "6636:74:3",
															"nodeType": "YulAssignment",
															"src": "6636:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6702:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6702:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6707:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6643:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "6643:58:3"
																},
																"nativeSrc": "6643:67:3",
																"nodeType": "YulFunctionCall",
																"src": "6643:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6636:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6636:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6808:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6808:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
																	"nativeSrc": "6719:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "6719:88:3"
																},
																"nativeSrc": "6719:93:3",
																"nodeType": "YulFunctionCall",
																"src": "6719:93:3"
															},
															"nativeSrc": "6719:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "6719:93:3"
														},
														{
															"nativeSrc": "6821:19:3",
															"nodeType": "YulAssignment",
															"src": "6821:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6832:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6832:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6837:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6837:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6828:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6828:3:3"
																},
																"nativeSrc": "6828:12:3",
																"nodeType": "YulFunctionCall",
																"src": "6828:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6821:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6821:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6480:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6614:3:3",
														"nodeType": "YulTypedName",
														"src": "6614:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6622:3:3",
														"nodeType": "YulTypedName",
														"src": "6622:3:3",
														"type": ""
													}
												],
												"src": "6480:366:3"
											},
											{
												"body": {
													"nativeSrc": "7023:248:3",
													"nodeType": "YulBlock",
													"src": "7023:248:3",
													"statements": [
														{
															"nativeSrc": "7033:26:3",
															"nodeType": "YulAssignment",
															"src": "7033:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7045:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7045:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7056:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7056:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7041:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7041:3:3"
																},
																"nativeSrc": "7041:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7041:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7033:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7033:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7080:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7091:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7091:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7076:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:3"
																		},
																		"nativeSrc": "7076:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7076:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7099:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "7099:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7105:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7105:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7095:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7095:3:3"
																		},
																		"nativeSrc": "7095:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7095:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7069:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7069:6:3"
																},
																"nativeSrc": "7069:47:3",
																"nodeType": "YulFunctionCall",
																"src": "7069:47:3"
															},
															"nativeSrc": "7069:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "7069:47:3"
														},
														{
															"nativeSrc": "7125:139:3",
															"nodeType": "YulAssignment",
															"src": "7125:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7259:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "7259:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7133:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "7133:124:3"
																},
																"nativeSrc": "7133:131:3",
																"nodeType": "YulFunctionCall",
																"src": "7133:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7125:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7125:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6852:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7003:9:3",
														"nodeType": "YulTypedName",
														"src": "7003:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7018:4:3",
														"nodeType": "YulTypedName",
														"src": "7018:4:3",
														"type": ""
													}
												],
												"src": "6852:419:3"
											},
											{
												"body": {
													"nativeSrc": "7305:152:3",
													"nodeType": "YulBlock",
													"src": "7305:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7322:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7322:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7325:77:3",
																		"nodeType": "YulLiteral",
																		"src": "7325:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7315:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7315:6:3"
																},
																"nativeSrc": "7315:88:3",
																"nodeType": "YulFunctionCall",
																"src": "7315:88:3"
															},
															"nativeSrc": "7315:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "7315:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7419:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7419:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7422:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7422:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7412:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7412:6:3"
																},
																"nativeSrc": "7412:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7412:15:3"
															},
															"nativeSrc": "7412:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7412:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7443:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7443:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7446:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7446:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7436:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:3"
																},
																"nativeSrc": "7436:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7436:15:3"
															},
															"nativeSrc": "7436:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7436:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7277:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "7277:180:3"
											},
											{
												"body": {
													"nativeSrc": "7507:147:3",
													"nodeType": "YulBlock",
													"src": "7507:147:3",
													"statements": [
														{
															"nativeSrc": "7517:25:3",
															"nodeType": "YulAssignment",
															"src": "7517:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7540:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7540:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7522:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7522:17:3"
																},
																"nativeSrc": "7522:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7522:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7517:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7517:1:3"
																}
															]
														},
														{
															"nativeSrc": "7551:25:3",
															"nodeType": "YulAssignment",
															"src": "7551:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7574:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7574:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7556:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7556:17:3"
																},
																"nativeSrc": "7556:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7556:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7551:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7551:1:3"
																}
															]
														},
														{
															"nativeSrc": "7585:16:3",
															"nodeType": "YulAssignment",
															"src": "7585:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7596:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7596:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7599:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7599:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7592:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:3"
																},
																"nativeSrc": "7592:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7592:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7585:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7625:22:3",
																"nodeType": "YulBlock",
																"src": "7625:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7627:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "7627:16:3"
																			},
																			"nativeSrc": "7627:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7627:18:3"
																		},
																		"nativeSrc": "7627:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "7627:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7617:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7617:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7620:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7620:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7614:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "7614:2:3"
																},
																"nativeSrc": "7614:10:3",
																"nodeType": "YulFunctionCall",
																"src": "7614:10:3"
															},
															"nativeSrc": "7611:36:3",
															"nodeType": "YulIf",
															"src": "7611:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7463:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7494:1:3",
														"nodeType": "YulTypedName",
														"src": "7494:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7497:1:3",
														"nodeType": "YulTypedName",
														"src": "7497:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7503:3:3",
														"nodeType": "YulTypedName",
														"src": "7503:3:3",
														"type": ""
													}
												],
												"src": "7463:191:3"
											},
											{
												"body": {
													"nativeSrc": "7688:152:3",
													"nodeType": "YulBlock",
													"src": "7688:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7705:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7705:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7708:77:3",
																		"nodeType": "YulLiteral",
																		"src": "7708:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7698:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7698:6:3"
																},
																"nativeSrc": "7698:88:3",
																"nodeType": "YulFunctionCall",
																"src": "7698:88:3"
															},
															"nativeSrc": "7698:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "7698:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7802:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7802:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7805:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7805:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7795:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:3"
																},
																"nativeSrc": "7795:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7795:15:3"
															},
															"nativeSrc": "7795:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7795:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7826:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7826:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7829:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7829:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7819:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:3"
																},
																"nativeSrc": "7819:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7819:15:3"
															},
															"nativeSrc": "7819:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7819:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7660:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "7660:180:3"
											},
											{
												"body": {
													"nativeSrc": "7891:149:3",
													"nodeType": "YulBlock",
													"src": "7891:149:3",
													"statements": [
														{
															"nativeSrc": "7901:25:3",
															"nodeType": "YulAssignment",
															"src": "7901:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7924:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7924:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7906:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7906:17:3"
																},
																"nativeSrc": "7906:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7906:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7901:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7901:1:3"
																}
															]
														},
														{
															"nativeSrc": "7935:25:3",
															"nodeType": "YulAssignment",
															"src": "7935:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7958:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7958:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7940:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7940:17:3"
																},
																"nativeSrc": "7940:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7940:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7935:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7935:1:3"
																}
															]
														},
														{
															"nativeSrc": "7969:17:3",
															"nodeType": "YulAssignment",
															"src": "7969:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7981:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7981:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7984:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7984:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7977:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:3"
																},
																"nativeSrc": "7977:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7977:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7969:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7969:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8011:22:3",
																"nodeType": "YulBlock",
																"src": "8011:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8013:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8013:16:3"
																			},
																			"nativeSrc": "8013:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8013:18:3"
																		},
																		"nativeSrc": "8013:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8013:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8002:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8002:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8008:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8008:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7999:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "7999:2:3"
																},
																"nativeSrc": "7999:11:3",
																"nodeType": "YulFunctionCall",
																"src": "7999:11:3"
															},
															"nativeSrc": "7996:37:3",
															"nodeType": "YulIf",
															"src": "7996:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7846:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7877:1:3",
														"nodeType": "YulTypedName",
														"src": "7877:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7880:1:3",
														"nodeType": "YulTypedName",
														"src": "7880:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7886:4:3",
														"nodeType": "YulTypedName",
														"src": "7886:4:3",
														"type": ""
													}
												],
												"src": "7846:194:3"
											},
											{
												"body": {
													"nativeSrc": "8089:128:3",
													"nodeType": "YulBlock",
													"src": "8089:128:3",
													"statements": [
														{
															"nativeSrc": "8099:33:3",
															"nodeType": "YulAssignment",
															"src": "8099:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8126:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "8126:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8108:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8108:17:3"
																},
																"nativeSrc": "8108:24:3",
																"nodeType": "YulFunctionCall",
																"src": "8108:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8099:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "8099:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8160:22:3",
																"nodeType": "YulBlock",
																"src": "8160:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8162:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8162:16:3"
																			},
																			"nativeSrc": "8162:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8162:18:3"
																		},
																		"nativeSrc": "8162:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8162:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8147:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "8147:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8154:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8154:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8144:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "8144:2:3"
																},
																"nativeSrc": "8144:15:3",
																"nodeType": "YulFunctionCall",
																"src": "8144:15:3"
															},
															"nativeSrc": "8141:41:3",
															"nodeType": "YulIf",
															"src": "8141:41:3"
														},
														{
															"nativeSrc": "8191:20:3",
															"nodeType": "YulAssignment",
															"src": "8191:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8202:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "8202:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8209:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8209:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8198:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8198:3:3"
																},
																"nativeSrc": "8198:13:3",
																"nodeType": "YulFunctionCall",
																"src": "8198:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8191:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8191:3:3"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "8046:171:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8075:5:3",
														"nodeType": "YulTypedName",
														"src": "8075:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8085:3:3",
														"nodeType": "YulTypedName",
														"src": "8085:3:3",
														"type": ""
													}
												],
												"src": "8046:171:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_address_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[3] -> address[3]\n    function abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$3_memory_ptr__to_t_array$_t_address_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda(memPtr) {\n\n        mstore(add(memPtr, 0), \"no balance!\")\n\n    }\n\n    function abi_encode_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979(memPtr) {\n\n        mstore(add(memPtr, 0), \"Donation amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44(memPtr) {\n\n        mstore(add(memPtr, 0), \"Donation period has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007a575f3560e01c8063d6387ed81161004d578063d6387ed814610104578063ed88c68e1461012e578063f12a4a5314610138578063f2fde38b146101625761007a565b80633ccfd60b1461007e578063410a1d3214610088578063715018a6146100c45780638da5cb5b146100da575b5f5ffd5b61008661018a565b005b348015610093575f5ffd5b506100ae60048036038101906100a99190610a56565b61027d565b6040516100bb9190610a99565b60405180910390f35b3480156100cf575f5ffd5b506100d86102c3565b005b3480156100e5575f5ffd5b506100ee6102d6565b6040516100fb9190610ac1565b60405180910390f35b34801561010f575f5ffd5b506101186102fd565b6040516101259190610b7f565b60405180910390f35b61013661037c565b005b348015610143575f5ffd5b5061014c6104b5565b6040516101599190610a99565b60405180910390f35b34801561016d575f5ffd5b5061018860048036038101906101839190610a56565b6104bb565b005b61019261053f565b5f4790505f81116101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf90610bf2565b60405180910390fd5b6101e06102d6565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610222573d5f5f3e3d5ffd5b5061022b6102d6565b73ffffffffffffffffffffffffffffffffffffffff167f106aac375bbcf013d1e52338bbf9e740009a1a3a6869f8daa1b72aa1620f5fec8242604051610272929190610c10565b60405180910390a250565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102cb61053f565b6102d45f6105c6565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103056109d6565b60038080602002604051908101604052809291908260038015610372576020028201915b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610329575b5050505050905090565b5f3490505f81116103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610ca7565b60405180910390fd5b6002544210610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd90610d0f565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104529190610d5a565b9250508190555061046233610687565b3373ffffffffffffffffffffffffffffffffffffffff167f106aac375bbcf013d1e52338bbf9e740009a1a3a6869f8daa1b72aa1620f5fec34426040516104aa929190610c10565b60405180910390a250565b60025481565b6104c361053f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610533575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161052a9190610ac1565b60405180910390fd5b61053c816105c6565b50565b6105476109cf565b73ffffffffffffffffffffffffffffffffffffffff166105656102d6565b73ffffffffffffffffffffffffffffffffffffffff16146105c4576105886109cf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105bb9190610ac1565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f5f90505f5f90505b6003811015610819578373ffffffffffffffffffffffffffffffffffffffff166003826003811061070557610704610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361074a5760019150610819565b5f73ffffffffffffffffffffffffffffffffffffffff166003826003811061077557610774610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361080c5783600382600381106107c6576107c5610d8d565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506109cc565b80806001019150506106d1565b5080156108275750506109cc565b5f5f90505b60038110156109c85760015f6003836003811061084c5761084b610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548311156109bb575f600290505b818111156109625760036001826108cb9190610dba565b600381106108dc576108db610d8d565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003826003811061091157610910610d8d565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061095a90610ded565b9150506108b4565b50836003826003811061097857610977610d8d565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109c8565b808060010191505061082c565b5050505b50565b5f33905090565b6040518060600160405280600390602082028036833780820191505090505090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a25826109fc565b9050919050565b610a3581610a1b565b8114610a3f575f5ffd5b50565b5f81359050610a5081610a2c565b92915050565b5f60208284031215610a6b57610a6a6109f8565b5b5f610a7884828501610a42565b91505092915050565b5f819050919050565b610a9381610a81565b82525050565b5f602082019050610aac5f830184610a8a565b92915050565b610abb81610a1b565b82525050565b5f602082019050610ad45f830184610ab2565b92915050565b5f60039050919050565b5f81905092915050565b5f819050919050565b610b0081610a1b565b82525050565b5f610b118383610af7565b60208301905092915050565b5f602082019050919050565b610b3281610ada565b610b3c8184610ae4565b9250610b4782610aee565b805f5b83811015610b77578151610b5e8782610b06565b9650610b6983610b1d565b925050600181019050610b4a565b505050505050565b5f606082019050610b925f830184610b29565b92915050565b5f82825260208201905092915050565b7f6e6f2062616c616e6365210000000000000000000000000000000000000000005f82015250565b5f610bdc600b83610b98565b9150610be782610ba8565b602082019050919050565b5f6020820190508181035f830152610c0981610bd0565b9050919050565b5f604082019050610c235f830185610a8a565b610c306020830184610a8a565b9392505050565b7f446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f610c91602683610b98565b9150610c9c82610c37565b604082019050919050565b5f6020820190508181035f830152610cbe81610c85565b9050919050565b7f446f6e6174696f6e20706572696f642068617320656e646564000000000000005f82015250565b5f610cf9601983610b98565b9150610d0482610cc5565b602082019050919050565b5f6020820190508181035f830152610d2681610ced565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d6482610a81565b9150610d6f83610a81565b9250828201905080821115610d8757610d86610d2d565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f610dc482610a81565b9150610dcf83610a81565b9250828203905081811115610de757610de6610d2d565b5b92915050565b5f610df782610a81565b91505f8203610e0957610e08610d2d565b5b60018203905091905056fea264697066735822122079d4349efc7044006f3d5c7712d80bee6145711bd20f9f3129b70d99f0601b8d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD6387ED8 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xD6387ED8 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xF12A4A53 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x162 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x86 PUSH2 0x18A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x2C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x37C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x53F JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E0 PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106AAC375BBCF013D1E52338BBF9E740009A1A3A6869F8DAA1B72AA1620F5FEC DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x272 SWAP3 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x53F JUMP JUMPDEST PUSH2 0x2D4 PUSH0 PUSH2 0x5C6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x305 PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x329 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B9 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FD SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x462 CALLER PUSH2 0x687 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106AAC375BBCF013D1E52338BBF9E740009A1A3A6869F8DAA1B72AA1620F5FEC CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x53F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x533 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53C DUP2 PUSH2 0x5C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x547 PUSH2 0x9CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x565 PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C4 JUMPI PUSH2 0x588 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x819 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x705 JUMPI PUSH2 0x704 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74A JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x819 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x775 JUMPI PUSH2 0x774 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80C JUMPI DUP4 PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x7C6 JUMPI PUSH2 0x7C5 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x9CC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6D1 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x827 JUMPI POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x1 PUSH0 PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x9BB JUMPI PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x962 JUMPI PUSH1 0x3 PUSH1 0x1 DUP3 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x8DC JUMPI PUSH2 0x8DB PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x95A SWAP1 PUSH2 0xDED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8B4 JUMP JUMPDEST POP DUP4 PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x978 JUMPI PUSH2 0x977 PUSH2 0xD8D JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x9C8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x82C JUMP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP3 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP2 EQ PUSH2 0xA3F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA50 DUP2 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6B JUMPI PUSH2 0xA6A PUSH2 0x9F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA78 DUP5 DUP3 DUP6 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA93 DUP2 PUSH2 0xA81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAAC PUSH0 DUP4 ADD DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD4 PUSH0 DUP4 ADD DUP5 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB00 DUP2 PUSH2 0xA1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB11 DUP4 DUP4 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xADA JUMP JUMPDEST PUSH2 0xB3C DUP2 DUP5 PUSH2 0xAE4 JUMP JUMPDEST SWAP3 POP PUSH2 0xB47 DUP3 PUSH2 0xAEE JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB77 JUMPI DUP2 MLOAD PUSH2 0xB5E DUP8 DUP3 PUSH2 0xB06 JUMP JUMPDEST SWAP7 POP PUSH2 0xB69 DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB4A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB92 PUSH0 DUP4 ADD DUP5 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F2062616C616E636521000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBDC PUSH1 0xB DUP4 PUSH2 0xB98 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE7 DUP3 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC09 DUP2 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH0 DUP4 ADD DUP6 PUSH2 0xA8A JUMP JUMPDEST PUSH2 0xC30 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC91 PUSH1 0x26 DUP4 PUSH2 0xB98 JUMP JUMPDEST SWAP2 POP PUSH2 0xC9C DUP3 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCBE DUP2 PUSH2 0xC85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20706572696F642068617320656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 PUSH1 0x19 DUP4 PUSH2 0xB98 JUMP JUMPDEST SWAP2 POP PUSH2 0xD04 DUP3 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD26 DUP2 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD64 DUP3 PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP4 PUSH2 0xA81 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD87 JUMPI PUSH2 0xD86 PUSH2 0xD2D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDC4 DUP3 PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCF DUP4 PUSH2 0xA81 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xD2D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF7 DUP3 PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xE09 JUMPI PUSH2 0xE08 PUSH2 0xD2D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD4349EFC7044006F3D5C7712D80BEE6145711BD20F9F3129B70D SWAP10 CREATE PUSH1 0x1B DUP14 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "820:2713:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2924:307;;;:::i;:::-;;3283:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3434:97:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1499:473;;;:::i;:::-;;1259:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2924:307:2;1531:13:0;:11;:13::i;:::-;2981:12:2::1;2996:21;2981:36;;3045:1;3035:7;:11;3027:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;3140:7;:5;:7::i;:::-;3132:25;;:34;3158:7;3132:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3190:7;:5;:7::i;:::-;3181:43;;;3199:7;3208:15;3181:43;;;;;;;:::i;:::-;;;;;;;;2971:260;2924:307::o:0;3283:104::-;3340:4;3363:10;:17;3374:5;3363:17;;;;;;;;;;;;;;;;3356:24;;3283:104;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3434:97:2:-;3479:17;;:::i;:::-;3515:9;3508:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:97;:::o;1499:473::-;1542:16;1561:9;1542:28;;1599:1;1588:8;:12;1580:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1775:15;;1757;:33;1749:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1856:8;1830:10;:22;1841:10;1830:22;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;1874:28;1891:10;1874:16;:28::i;:::-;1926:10;1917:48;;;1938:9;1949:15;1917:48;;;;;;;:::i;:::-;;;;;;;;1532:440;1499:473::o;1259:30::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1978:893:2:-;2036:14;2053:10;:17;2064:5;2053:17;;;;;;;;;;;;;;;;2036:34;;2080:15;2098:5;2080:23;;2158:9;2170:1;2158:13;;2153:278;2177:1;2173;:5;2153:278;;;2219:5;2203:21;;:9;2213:1;2203:12;;;;;;;:::i;:::-;;;;;;;;;;;;;:21;;;2199:100;;2257:4;2244:17;;2279:5;;2199:100;2340:1;2316:26;;:9;2326:1;2316:12;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;2312:109;;2377:5;2362:9;2372:1;2362:12;;;;;;;:::i;:::-;;;;:20;;;;;;;;;;;;;;;;;;2400:7;;;;;2312:109;2180:3;;;;;;;2153:278;;;;2484:10;2480:47;;;2510:7;;;;2480:47;2578:9;2590:1;2578:13;;2573:292;2597:1;2593;:5;2573:292;;;2632:10;:24;2643:9;2653:1;2643:12;;;;;;;:::i;:::-;;;;;;;;;;;;;2632:24;;;;;;;;;;;;;;;;2623:6;:33;2619:236;;;2681:9;2693:1;2681:13;;2676:104;2700:1;2696;:5;2676:104;;;2745:9;2759:1;2755;:5;;;;:::i;:::-;2745:16;;;;;;;:::i;:::-;;;;;;;;;;;;;2730:9;2740:1;2730:12;;;;;;;:::i;:::-;;;;:31;;;;;;;;;;;;;;;;;;2703:3;;;;;:::i;:::-;;;;2676:104;;;;2812:5;2797:9;2807:1;2797:12;;;;;;;:::i;:::-;;;;:20;;;;;;;;;;;;;;;;;;2835:5;;2619:236;2600:3;;;;;;;2573:292;;;;2026:845;;1978:893;;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:104::-;2028:6;2056:4;2046:14;;1963:104;;;:::o;2073:143::-;2170:11;2207:3;2192:18;;2073:143;;;;:::o;2222:98::-;2287:4;2310:3;2302:11;;2222:98;;;:::o;2326:108::-;2403:24;2421:5;2403:24;:::i;:::-;2398:3;2391:37;2326:108;;:::o;2440:179::-;2509:10;2530:46;2572:3;2564:6;2530:46;:::i;:::-;2608:4;2603:3;2599:14;2585:28;;2440:179;;;;:::o;2625:111::-;2693:4;2725;2720:3;2716:14;2708:22;;2625:111;;;:::o;2774:694::-;2910:52;2956:5;2910:52;:::i;:::-;2978:84;3055:6;3050:3;2978:84;:::i;:::-;2971:91;;3086:54;3134:5;3086:54;:::i;:::-;3163:7;3194:1;3179:282;3204:6;3201:1;3198:13;3179:282;;;3280:6;3274:13;3307:63;3366:3;3351:13;3307:63;:::i;:::-;3300:70;;3393:58;3444:6;3393:58;:::i;:::-;3383:68;;3239:222;3226:1;3223;3219:9;3214:14;;3179:282;;;3183:14;2886:582;;;2774:694;;:::o;3474:314::-;3613:4;3651:2;3640:9;3636:18;3628:26;;3664:117;3778:1;3767:9;3763:17;3754:6;3664:117;:::i;:::-;3474:314;;;;:::o;3794:169::-;3878:11;3912:6;3907:3;3900:19;3952:4;3947:3;3943:14;3928:29;;3794:169;;;;:::o;3969:161::-;4109:13;4105:1;4097:6;4093:14;4086:37;3969:161;:::o;4136:366::-;4278:3;4299:67;4363:2;4358:3;4299:67;:::i;:::-;4292:74;;4375:93;4464:3;4375:93;:::i;:::-;4493:2;4488:3;4484:12;4477:19;;4136:366;;;:::o;4508:419::-;4674:4;4712:2;4701:9;4697:18;4689:26;;4761:9;4755:4;4751:20;4747:1;4736:9;4732:17;4725:47;4789:131;4915:4;4789:131;:::i;:::-;4781:139;;4508:419;;;:::o;4933:332::-;5054:4;5092:2;5081:9;5077:18;5069:26;;5105:71;5173:1;5162:9;5158:17;5149:6;5105:71;:::i;:::-;5186:72;5254:2;5243:9;5239:18;5230:6;5186:72;:::i;:::-;4933:332;;;;;:::o;5271:225::-;5411:34;5407:1;5399:6;5395:14;5388:58;5480:8;5475:2;5467:6;5463:15;5456:33;5271:225;:::o;5502:366::-;5644:3;5665:67;5729:2;5724:3;5665:67;:::i;:::-;5658:74;;5741:93;5830:3;5741:93;:::i;:::-;5859:2;5854:3;5850:12;5843:19;;5502:366;;;:::o;5874:419::-;6040:4;6078:2;6067:9;6063:18;6055:26;;6127:9;6121:4;6117:20;6113:1;6102:9;6098:17;6091:47;6155:131;6281:4;6155:131;:::i;:::-;6147:139;;5874:419;;;:::o;6299:175::-;6439:27;6435:1;6427:6;6423:14;6416:51;6299:175;:::o;6480:366::-;6622:3;6643:67;6707:2;6702:3;6643:67;:::i;:::-;6636:74;;6719:93;6808:3;6719:93;:::i;:::-;6837:2;6832:3;6828:12;6821:19;;6480:366;;;:::o;6852:419::-;7018:4;7056:2;7045:9;7041:18;7033:26;;7105:9;7099:4;7095:20;7091:1;7080:9;7076:17;7069:47;7133:131;7259:4;7133:131;:::i;:::-;7125:139;;6852:419;;;:::o;7277:180::-;7325:77;7322:1;7315:88;7422:4;7419:1;7412:15;7446:4;7443:1;7436:15;7463:191;7503:3;7522:20;7540:1;7522:20;:::i;:::-;7517:25;;7556:20;7574:1;7556:20;:::i;:::-;7551:25;;7599:1;7596;7592:9;7585:16;;7620:3;7617:1;7614:10;7611:36;;;7627:18;;:::i;:::-;7611:36;7463:191;;;;:::o;7660:180::-;7708:77;7705:1;7698:88;7805:4;7802:1;7795:15;7829:4;7826:1;7819:15;7846:194;7886:4;7906:20;7924:1;7906:20;:::i;:::-;7901:25;;7940:20;7958:1;7940:20;:::i;:::-;7935:25;;7984:1;7981;7977:9;7969:17;;8008:1;8002:4;7999:11;7996:37;;;8013:18;;:::i;:::-;7996:37;7846:194;;;;:::o;8046:171::-;8085:3;8108:24;8126:5;8108:24;:::i;:::-;8099:33;;8154:4;8147:5;8144:15;8141:41;;8162:18;;:::i;:::-;8141:41;8209:1;8202:5;8198:13;8191:20;;8046:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "731600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"donate()": "infinite",
								"donationEndTime()": "2469",
								"getDonation(address)": "2852",
								"getTopDonors()": "infinite",
								"owner()": "2581",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"updateTopDonnors(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 820,
									"end": 3533,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1385,
									"end": 1479,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1407,
									"end": 1417,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1466,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3F480"
								},
								{
									"begin": 1448,
									"end": 1463,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1448,
									"end": 1472,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1472,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1448,
									"end": 1472,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1472,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1448,
									"end": 1472,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1445,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1430,
									"end": 1472,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1472,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1472,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1472,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 593,
									"end": 670,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 630,
									"end": 637,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 648,
									"end": 664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 648,
									"end": 664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 676,
									"end": 856,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 676,
									"end": 856,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 724,
									"end": 801,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 721,
									"end": 722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 714,
									"end": 802,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 821,
									"end": 825,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 811,
									"end": 826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 845,
									"end": 849,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 850,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 902,
									"end": 905,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 939,
									"end": 940,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 921,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 921,
									"end": 941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 941,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 941,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 916,
									"end": 941,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 916,
									"end": 941,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 973,
									"end": 974,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 955,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 955,
									"end": 975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 975,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 955,
									"end": 975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 950,
									"end": 975,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 950,
									"end": 975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 998,
									"end": 999,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1000,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 984,
									"end": 1000,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 984,
									"end": 1000,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1022,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1016,
									"end": 1017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1013,
									"end": 1023,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1026,
									"end": 1044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 3533,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079d4349efc7044006f3d5c7712d80bee6145711bd20f9f3129b70d99f0601b8d64736f6c634300081e0033",
									".code": [
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "D6387ED8"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "D6387ED8"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "ED88C68E"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "F12A4A53"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "410A1D32"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 3533,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2924,
											"end": 3231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3283,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3283,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3283,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3434,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3434,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1499,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1259,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2924,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3046,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3027,
											"end": 3062,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3027,
											"end": 3062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3140,
											"end": 3145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3140,
											"end": 3147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3140,
											"end": 3147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3132,
											"end": 3157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 3158,
											"end": 3165,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3190,
											"end": 3195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3190,
											"end": 3197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3190,
											"end": 3197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "106AAC375BBCF013D1E52338BBF9E740009A1A3A6869F8DAA1B72AA1620F5FEC"
										},
										{
											"begin": 3199,
											"end": 3206,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3223,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3181,
											"end": 3224,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3224,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3231,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3373,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3479,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3515,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3434,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1499,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1600,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1580,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1790,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1775,
											"end": 1790,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1772,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1790,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1749,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1749,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1851,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1830,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1891,
											"end": 1901,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1874,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1902,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1874,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1936,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "106AAC375BBCF013D1E52338BBF9E740009A1A3A6869F8DAA1B72AA1620F5FEC"
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1964,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1917,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1965,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1978,
											"end": 2871,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1978,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2070,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2178,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2199,
											"end": 2299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2244,
											"end": 2261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2199,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2325,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2316,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2342,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2312,
											"end": 2421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2421,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2312,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2593,
											"end": 2594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2598,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2642,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2643,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2656,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2855,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2619,
											"end": 2855,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2681,
											"end": 2694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2701,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2759,
											"end": 2760,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2755,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2745,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2740,
											"end": 2741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2730,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2703,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2817,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2797,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2855,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2619,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2871,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1978,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2046,
											"end": 2060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2216,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2073,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2210,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2216,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2320,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2222,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2320,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2434,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2326,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2403,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2427,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2403,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2428,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2619,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2440,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2572,
											"end": 2575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2570,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2530,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2576,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2530,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2608,
											"end": 2612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2606,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2585,
											"end": 2613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2585,
											"end": 2613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2619,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2736,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2625,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2729,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2720,
											"end": 2723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2736,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 3468,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2774,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2956,
											"end": 2961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2910,
											"end": 2962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2962,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2910,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2978,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3062,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2978,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3062,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3086,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3086,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3202,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3198,
											"end": 3211,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3287,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3366,
											"end": 3369,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3307,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3370,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3307,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3393,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3451,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3393,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3451,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3179,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 3468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 3468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 3468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 3468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3474,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3763,
											"end": 3780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3664,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3781,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3664,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3794,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3919,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3956,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 3957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3963,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3969,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4122,
											"name": "PUSH",
											"source": 3,
											"value": "6E6F2062616C616E636521000000000000000000000000000000000000000000"
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4093,
											"end": 4107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4086,
											"end": 4123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4502,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4136,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4363,
											"end": 4365,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4299,
											"end": 4366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4366,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4299,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4366,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4375,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4468,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4375,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4493,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4488,
											"end": 4491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4927,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4508,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4771,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4747,
											"end": 4748,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4745,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4725,
											"end": 4772,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4915,
											"end": 4919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4789,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4920,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4789,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5265,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4933,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5054,
											"end": 5058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 5095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 5095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5105,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5171,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5158,
											"end": 5175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5105,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5105,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5105,
											"end": 5176,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5105,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5236,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5186,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5258,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5186,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5265,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5265,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5496,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5271,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5411,
											"end": 5445,
											"name": "PUSH",
											"source": 3,
											"value": "446F6E6174696F6E20616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5488,
											"name": "PUSH",
											"source": 3,
											"value": "7468616E20300000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5463,
											"end": 5478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5489,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5868,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5502,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5729,
											"end": 5731,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5724,
											"end": 5727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5665,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5665,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5665,
											"end": 5732,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5665,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5830,
											"end": 5833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5741,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5741,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 5857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5850,
											"end": 5862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 5862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 5862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 6293,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5874,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6080,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6055,
											"end": 6081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6055,
											"end": 6081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6121,
											"end": 6125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6137,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6111,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6155,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6155,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6155,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6155,
											"end": 6286,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6155,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6147,
											"end": 6286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6147,
											"end": 6286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 6293,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 6293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 6293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 6293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6474,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6299,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "446F6E6174696F6E20706572696F642068617320656E64656400000000000000"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6299,
											"end": 6474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6846,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6480,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6622,
											"end": 6625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6643,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 6710,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6643,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6636,
											"end": 6710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6636,
											"end": 6710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6808,
											"end": 6811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6719,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6719,
											"end": 6812,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6719,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6837,
											"end": 6839,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6832,
											"end": 6835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6828,
											"end": 6840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 7271,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6852,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7045,
											"end": 7054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7095,
											"end": 7115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7080,
											"end": 7089,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7076,
											"end": 7093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7069,
											"end": 7116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7133,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7259,
											"end": 7263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7133,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 7133,
											"end": 7264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7133,
											"end": 7264,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7133,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7125,
											"end": 7264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7125,
											"end": 7264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 7271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 7271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 7271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 7271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7277,
											"end": 7457,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 7277,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7325,
											"end": 7402,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7403,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7422,
											"end": 7426,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7412,
											"end": 7427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7446,
											"end": 7450,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7443,
											"end": 7444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7451,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7654,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7463,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7522,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7522,
											"end": 7542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7522,
											"end": 7542,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7522,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7556,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7576,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7596,
											"end": 7597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7620,
											"end": 7623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7614,
											"end": 7624,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7611,
											"end": 7647,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7611,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7611,
											"end": 7647,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 7627,
											"end": 7645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7611,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7611,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7654,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7660,
											"end": 7840,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7660,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 7785,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7705,
											"end": 7706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7698,
											"end": 7786,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7805,
											"end": 7809,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 7802,
											"end": 7803,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7795,
											"end": 7810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7833,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7826,
											"end": 7827,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7834,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 8040,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7846,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7886,
											"end": 7890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7906,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7906,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7901,
											"end": 7926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7901,
											"end": 7926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7958,
											"end": 7959,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7940,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 7960,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7940,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7935,
											"end": 7960,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7935,
											"end": 7960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 7985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 7986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7969,
											"end": 7986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7969,
											"end": 7986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8008,
											"end": 8009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7999,
											"end": 8010,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8013,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 8040,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 8040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 8040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 8040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 8040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8217,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 8046,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8126,
											"end": 8131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8108,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8108,
											"end": 8132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8108,
											"end": 8132,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8108,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8152,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8144,
											"end": 8159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8141,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8141,
											"end": 8182,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8162,
											"end": 8180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8141,
											"end": 8182,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8141,
											"end": 8182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8210,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8202,
											"end": 8207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8198,
											"end": 8211,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8191,
											"end": 8211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8191,
											"end": 8211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"task2/BeggingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate()": "ed88c68e",
							"donationEndTime()": "f12a4a53",
							"getDonation(address)": "410a1d32",
							"getTopDonors()": "d6387ed8",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Donation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithDraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTopDonors\",\"outputs\":[{\"internalType\":\"address[3]\",\"name\":\"\",\"type\":\"address[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u521b\\u5efa\\u4e00\\u4e2a\\u540d\\u4e3a BeggingContract \\u7684\\u5408\\u7ea6\\u3002 \\u5408\\u7ea6\\u5e94\\u5305\\u542b\\u4ee5\\u4e0b\\u529f\\u80fd\\uff1a \\u4e00\\u4e2a mapping \\u6765\\u8bb0\\u5f55\\u6bcf\\u4e2a\\u6350\\u8d60\\u8005\\u7684\\u6350\\u8d60\\u91d1\\u989d\\u3002 \\u4e00\\u4e2a donate \\u51fd\\u6570\\uff0c\\u5141\\u8bb8\\u7528\\u6237\\u5411\\u5408\\u7ea6\\u53d1\\u9001\\u4ee5\\u592a\\u5e01\\uff0c\\u5e76\\u8bb0\\u5f55\\u6350\\u8d60\\u4fe1\\u606f\\u3002 \\u4e00\\u4e2a withdraw \\u51fd\\u6570\\uff0c\\u5141\\u8bb8\\u5408\\u7ea6\\u6240\\u6709\\u8005\\u63d0\\u53d6\\u6240\\u6709\\u8d44\\u91d1\\u3002 \\u4e00\\u4e2a getDonation \\u51fd\\u6570\\uff0c\\u5141\\u8bb8\\u67e5\\u8be2\\u67d0\\u4e2a\\u5730\\u5740\\u7684\\u6350\\u8d60\\u91d1\\u989d\\u3002 \\u4f7f\\u7528 payable \\u4fee\\u9970\\u7b26\\u548c address.transfer \\u5b9e\\u73b0\\u652f\\u4ed8\\u548c\\u63d0\\u6b3e\\u3002 \\u6350\\u8d60\\u4e8b\\u4ef6\\uff1a\\u6dfb\\u52a0 Donation \\u4e8b\\u4ef6\\uff0c\\u8bb0\\u5f55\\u6bcf\\u6b21\\u6350\\u8d60\\u7684\\u5730\\u5740\\u548c\\u91d1\\u989d\\u3002 \\u6350\\u8d60\\u6392\\u884c\\u699c\\uff1a\\u5b9e\\u73b0\\u4e00\\u4e2a\\u529f\\u80fd\\uff0c\\u663e\\u793a\\u6350\\u8d60\\u91d1\\u989d\\u6700\\u591a\\u7684\\u524d 3 \\u4e2a\\u5730\\u5740\\u3002 \\u65f6\\u95f4\\u9650\\u5236\\uff1a\\u6dfb\\u52a0\\u4e00\\u4e2a\\u65f6\\u95f4\\u9650\\u5236\\uff0c\\u53ea\\u6709\\u5728\\u7279\\u5b9a\\u65f6\\u95f4\\u6bb5\\u5185\\u624d\\u80fd\\u6350\\u8d60\\u3002*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"task2/BeggingContract.sol\":\"BeggingContract\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"task2/BeggingContract.sol\":{\"keccak256\":\"0x6d8d09bbcae69fb13c236985dc1f8944c8494ef6ecdffa7e12be99ef329d064f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f34402a5316cb22887645d2c4c6daabe0018aac77cf23154ac08e6f44381ec8\",\"dweb:/ipfs/QmSugYPuafS7VyQ9mQcg1wWUzYhWZjNBEF6PrxjuS8vE4P\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 188,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "_donations",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 206,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "donationEndTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 210,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "topDonors",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)3_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)3_storage": {
								"base": "t_address",
								"encoding": "inplace",
								"label": "address[3]",
								"numberOfBytes": "96"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "创建一个名为 BeggingContract 的合约。 合约应包含以下功能： 一个 mapping 来记录每个捐赠者的捐赠金额。 一个 donate 函数，允许用户向合约发送以太币，并记录捐赠信息。 一个 withdraw 函数，允许合约所有者提取所有资金。 一个 getDonation 函数，允许查询某个地址的捐赠金额。 使用 payable 修饰符和 address.transfer 实现支付和提款。 捐赠事件：添加 Donation 事件，记录每次捐赠的地址和金额。 捐赠排行榜：实现一个功能，显示捐赠金额最多的前 3 个地址。 时间限制：添加一个时间限制，只有在特定时间段内才能捐赠。*",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"task2/BeggingContract.sol": {
				"ast": {
					"absolutePath": "task2/BeggingContract.sol",
					"exportedSymbols": {
						"BeggingContract": [
							442
						],
						"Ownable": [
							147
						]
					},
					"id": 443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 443,
							"sourceUnit": 148,
							"src": "58:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 180,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "66:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Ownable",
										"nameLocations": [
											"848:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "848:7:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "848:7:2"
								}
							],
							"canonicalName": "BeggingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "127:691:2",
								"text": "创建一个名为 BeggingContract 的合约。\n合约应包含以下功能：\n一个 mapping 来记录每个捐赠者的捐赠金额。\n一个 donate 函数，允许用户向合约发送以太币，并记录捐赠信息。\n一个 withdraw 函数，允许合约所有者提取所有资金。\n一个 getDonation 函数，允许查询某个地址的捐赠金额。\n使用 payable 修饰符和 address.transfer 实现支付和提款。\n捐赠事件：添加 Donation 事件，记录每次捐赠的地址和金额。\n捐赠排行榜：实现一个功能，显示捐赠金额最多的前 3 个地址。\n时间限制：添加一个时间限制，只有在特定时间段内才能捐赠。*"
							},
							"fullyImplemented": true,
							"id": 442,
							"linearizedBaseContracts": [
								442,
								147,
								177
							],
							"name": "BeggingContract",
							"nameLocation": "829:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "_donations",
									"nameLocation": "954:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "908:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 187,
										"keyName": "donor",
										"keyNameLocation": "924:5:2",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "916:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "908:37:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "amount",
										"valueNameLocation": "938:6:2",
										"valueType": {
											"id": 186,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "933:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "106aac375bbcf013d1e52338bbf9e740009a1a3a6869f8daa1b72aa1620f5fec",
									"id": 196,
									"name": "Donation",
									"nameLocation": "1063:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"indexed": true,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "1088:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1072:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1103:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1095:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1119:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1111:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:58:2"
									},
									"src": "1057:73:2"
								},
								{
									"anonymous": false,
									"eventSelector": "368ba06b8e369ee83d3f43ca91b5ffb24662660cc0bbb2bf8c356cebcf42ad85",
									"id": 204,
									"name": "WithDraw",
									"nameLocation": "1161:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1186:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1170:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1201:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1193:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1217:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1209:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:58:2"
									},
									"src": "1155:73:2"
								},
								{
									"constant": false,
									"functionSelector": "f12a4a53",
									"id": 206,
									"mutability": "mutable",
									"name": "donationEndTime",
									"nameLocation": "1274:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "1259:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1259:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 210,
									"mutability": "mutable",
									"name": "topDonors",
									"nameLocation": "1349:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "1330:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$3_storage",
										"typeString": "address[3]"
									},
									"typeName": {
										"baseType": {
											"id": 207,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1330:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 209,
										"length": {
											"hexValue": "33",
											"id": 208,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1338:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "1330:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
											"typeString": "address[3]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "1419:60:2",
										"statements": [
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "donationEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "1430:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 218,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1448:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1454:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1448:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "33",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1466:6:2",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_259200_by_1",
																"typeString": "int_const 259200"
															},
															"value": "3"
														},
														"src": "1448:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1430:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1430:42:2"
											}
										]
									},
									"id": 225,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 213,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1407:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1411:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1407:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 215,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 212,
												"name": "Ownable",
												"nameLocations": [
													"1399:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1399:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1399:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:2:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:0:2"
									},
									"scope": 442,
									"src": "1385:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "1532:440:2",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "donation",
														"nameLocation": "1550:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "1542:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 232,
												"initialValue": {
													"expression": {
														"id": 230,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1561:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1565:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "1561:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1542:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 234,
																"name": "donation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "1588:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1599:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1588:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1602:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979",
																"typeString": "literal_string \"Donation amount must be greater than 0\""
															},
															"value": "Donation amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e5ad10181c99695713a6b47daf55f3a30fa4a74ef9d0804bf4da9e977a88979",
																"typeString": "literal_string \"Donation amount must be greater than 0\""
															}
														],
														"id": 233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1580:63:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 241,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1757:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1763:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1757:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 243,
																"name": "donationEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1775:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1757:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6e6174696f6e20706572696f642068617320656e646564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1792:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
																"typeString": "literal_string \"Donation period has ended\""
															},
															"value": "Donation period has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
																"typeString": "literal_string \"Donation period has ended\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1749:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1749:71:2"
											},
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 248,
															"name": "_donations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1830:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 251,
														"indexExpression": {
															"expression": {
																"id": 249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1841:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1845:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1841:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1830:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 252,
														"name": "donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "1856:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1830:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1830:34:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 256,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1891:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1895:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1891:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 255,
														"name": "updateTopDonnors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "1874:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1874:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "1874:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 261,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1926:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1930:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1926:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1938:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1942:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1938:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 265,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1949:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1955:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1949:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 260,
														"name": "Donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1917:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "EmitStatement",
												"src": "1912:53:2"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "1508:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1532:0:2"
									},
									"scope": 442,
									"src": "1499:473:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "2026:845:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2044:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "2036:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2036:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"baseExpression": {
														"id": 277,
														"name": "_donations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2053:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 279,
													"indexExpression": {
														"id": 278,
														"name": "donor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2064:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2053:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2036:34:2"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "isTopDonor",
														"nameLocation": "2085:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "2080:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 281,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2098:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2080:23:2"
											},
											{
												"body": {
													"id": 324,
													"nodeType": "Block",
													"src": "2185:246:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 295,
																		"name": "topDonors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "2203:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$3_storage",
																			"typeString": "address[3] storage ref"
																		}
																	},
																	"id": 297,
																	"indexExpression": {
																		"id": 296,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "2213:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2203:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 298,
																	"name": "donor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "2219:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2203:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 306,
															"nodeType": "IfStatement",
															"src": "2199:100:2",
															"trueBody": {
																"id": 305,
																"nodeType": "Block",
																"src": "2226:73:2",
																"statements": [
																	{
																		"expression": {
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 300,
																				"name": "isTopDonor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "2244:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2257:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2244:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 303,
																		"nodeType": "ExpressionStatement",
																		"src": "2244:17:2"
																	},
																	{
																		"id": 304,
																		"nodeType": "Break",
																		"src": "2279:5:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 307,
																		"name": "topDonors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "2316:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$3_storage",
																			"typeString": "address[3] storage ref"
																		}
																	},
																	"id": 309,
																	"indexExpression": {
																		"id": 308,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "2326:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2316:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2340:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2332:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2332:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2316:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 323,
															"nodeType": "IfStatement",
															"src": "2312:109:2",
															"trueBody": {
																"id": 322,
																"nodeType": "Block",
																"src": "2344:77:2",
																"statements": [
																	{
																		"expression": {
																			"id": 319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 315,
																					"name": "topDonors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 210,
																					"src": "2362:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$3_storage",
																						"typeString": "address[3] storage ref"
																					}
																				},
																				"id": 317,
																				"indexExpression": {
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 286,
																					"src": "2372:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2362:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 318,
																				"name": "donor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "2377:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2362:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 320,
																		"nodeType": "ExpressionStatement",
																		"src": "2362:20:2"
																	},
																	{
																		"functionReturnParameters": 274,
																		"id": 321,
																		"nodeType": "Return",
																		"src": "2400:7:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 289,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2173:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2177:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2173:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"initializationExpression": {
													"assignments": [
														286
													],
													"declarations": [
														{
															"constant": false,
															"id": 286,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2166:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 325,
															"src": "2158:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2158:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 288,
													"initialValue": {
														"hexValue": "30",
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2170:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2158:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2180:3:2",
														"subExpression": {
															"id": 292,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2180:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 294,
													"nodeType": "ExpressionStatement",
													"src": "2180:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2153:278:2"
											},
											{
												"condition": {
													"id": 326,
													"name": "isTopDonor",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 282,
													"src": "2484:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 329,
												"nodeType": "IfStatement",
												"src": "2480:47:2",
												"trueBody": {
													"id": 328,
													"nodeType": "Block",
													"src": "2496:31:2",
													"statements": [
														{
															"functionReturnParameters": 274,
															"id": 327,
															"nodeType": "Return",
															"src": "2510:7:2"
														}
													]
												}
											},
											{
												"body": {
													"id": 378,
													"nodeType": "Block",
													"src": "2605:260:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 340,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "2623:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"baseExpression": {
																		"id": 341,
																		"name": "_donations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "2632:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 345,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 342,
																			"name": "topDonors",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "2643:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$3_storage",
																				"typeString": "address[3] storage ref"
																			}
																		},
																		"id": 344,
																		"indexExpression": {
																			"id": 343,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2653:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2643:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2632:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2623:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 377,
															"nodeType": "IfStatement",
															"src": "2619:236:2",
															"trueBody": {
																"id": 376,
																"nodeType": "Block",
																"src": "2658:197:2",
																"statements": [
																	{
																		"body": {
																			"id": 367,
																			"nodeType": "Block",
																			"src": "2708:72:2",
																			"statements": [
																				{
																					"expression": {
																						"id": 365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 357,
																								"name": "topDonors",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 210,
																								"src": "2730:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$3_storage",
																									"typeString": "address[3] storage ref"
																								}
																							},
																							"id": 359,
																							"indexExpression": {
																								"id": 358,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 348,
																								"src": "2740:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "2730:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 360,
																								"name": "topDonors",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 210,
																								"src": "2745:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$3_storage",
																									"typeString": "address[3] storage ref"
																								}
																							},
																							"id": 364,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 363,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 361,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 348,
																									"src": "2755:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 362,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2759:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "2755:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2745:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "2730:31:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 366,
																					"nodeType": "ExpressionStatement",
																					"src": "2730:31:2"
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 351,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "2696:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 352,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2696:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 368,
																		"initializationExpression": {
																			"assignments": [
																				348
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 348,
																					"mutability": "mutable",
																					"name": "j",
																					"nameLocation": "2689:1:2",
																					"nodeType": "VariableDeclaration",
																					"scope": 368,
																					"src": "2681:9:2",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 347,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "2681:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 350,
																			"initialValue": {
																				"hexValue": "32",
																				"id": 349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2693:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "2681:13:2"
																		},
																		"isSimpleCounterLoop": false,
																		"loopExpression": {
																			"expression": {
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": false,
																				"src": "2703:3:2",
																				"subExpression": {
																					"id": 354,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 348,
																					"src": "2703:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 356,
																			"nodeType": "ExpressionStatement",
																			"src": "2703:3:2"
																		},
																		"nodeType": "ForStatement",
																		"src": "2676:104:2"
																	},
																	{
																		"expression": {
																			"id": 373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 369,
																					"name": "topDonors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 210,
																					"src": "2797:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$3_storage",
																						"typeString": "address[3] storage ref"
																					}
																				},
																				"id": 371,
																				"indexExpression": {
																					"id": 370,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 331,
																					"src": "2807:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2797:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 372,
																				"name": "donor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "2812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2797:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 374,
																		"nodeType": "ExpressionStatement",
																		"src": "2797:20:2"
																	},
																	{
																		"id": 375,
																		"nodeType": "Break",
																		"src": "2835:5:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 334,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2593:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2597:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2593:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"initializationExpression": {
													"assignments": [
														331
													],
													"declarations": [
														{
															"constant": false,
															"id": 331,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2586:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 379,
															"src": "2578:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 330,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2578:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 333,
													"initialValue": {
														"hexValue": "30",
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2590:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2578:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2600:3:2",
														"subExpression": {
															"id": 337,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2600:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 339,
													"nodeType": "ExpressionStatement",
													"src": "2600:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2573:292:2"
											}
										]
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTopDonnors",
									"nameLocation": "1987:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "2012:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2004:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2003:15:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:0:2"
									},
									"scope": 442,
									"src": "1978:893:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2971:260:2",
										"statements": [
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2986:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "2981:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2981:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 390,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3004:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BeggingContract_$442",
																	"typeString": "contract BeggingContract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BeggingContract_$442",
																	"typeString": "contract BeggingContract"
																}
															],
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2996:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 388,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2996:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2996:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3010:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2996:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2981:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "3035:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3045:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3035:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f2062616c616e636521",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3048:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda",
																"typeString": "literal_string \"no balance!\""
															},
															"value": "no balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3296cb0bfe001ae7f7c1578a69dbbd45d63e10702577fcdee1a64eba87551dda",
																"typeString": "literal_string \"no balance!\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3027:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3027:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3027:35:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "3158:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 403,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3140:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3140:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3132:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 401,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3132:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3132:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3149:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3132:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3132:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "3132:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 411,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3190:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3190:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "3199:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 414,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3214:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3208:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 410,
														"name": "Donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3181:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "EmitStatement",
												"src": "3176:48:2"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 384,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 383,
												"name": "onlyOwner",
												"nameLocations": [
													"2961:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2961:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2961:9:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "2933:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2941:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2971:0:2"
									},
									"scope": 442,
									"src": "2924:307:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3346:41:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 426,
														"name": "_donations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "3363:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 428,
													"indexExpression": {
														"id": 427,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3374:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3363:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 425,
												"id": 429,
												"nodeType": "Return",
												"src": "3356:24:2"
											}
										]
									},
									"functionSelector": "410a1d32",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonation",
									"nameLocation": "3292:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "3312:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3304:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3304:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3303:15:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 442,
									"src": "3283:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "3498:33:2",
										"statements": [
											{
												"expression": {
													"id": 438,
													"name": "topDonors",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 210,
													"src": "3515:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$3_storage",
														"typeString": "address[3] storage ref"
													}
												},
												"functionReturnParameters": 437,
												"id": 439,
												"nodeType": "Return",
												"src": "3508:16:2"
											}
										]
									},
									"functionSelector": "d6387ed8",
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTopDonors",
									"nameLocation": "3443:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3455:2:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3479:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
													"typeString": "address[3]"
												},
												"typeName": {
													"baseType": {
														"id": 433,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3479:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 435,
													"length": {
														"hexValue": "33",
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "3479:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
														"typeString": "address[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:19:2"
									},
									"scope": 442,
									"src": "3434:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 443,
							"src": "820:2713:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								196,
								204
							]
						}
					],
					"src": "32:3502:2"
				},
				"id": 2
			}
		}
	}
}